ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"task.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.initTask,"ax",%progbits
  16              		.align	1
  17              		.global	initTask
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	initTask:
  24              	.LFB66:
  25              		.file 1 "Src/task.c"
   1:Src/task.c    **** #include "task.h"
   2:Src/task.c    **** 
   3:Src/task.c    **** #include "debug.h"
   4:Src/task.c    **** #include <stdio.h>
   5:Src/task.c    **** 
   6:Src/task.c    **** 
   7:Src/task.c    **** task_control_block_t tcb[MAX_TASK_COUNT];
   8:Src/task.c    **** 
   9:Src/task.c    **** char stackFrame[MAX_TASK_COUNT * STACK_FRAME_SIZE];
  10:Src/task.c    **** 
  11:Src/task.c    **** uint32_t currentTask = 0;
  12:Src/task.c    **** 
  13:Src/task.c    **** int initTask()
  14:Src/task.c    **** {
  26              		.loc 1 14 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  15:Src/task.c    ****     int i;
  16:Src/task.c    ****     for (i = 0;i < MAX_TASK_COUNT; i++)
  32              		.loc 1 16 0
  33 0000 0023     		movs	r3, #0
  34 0002 00E0     		b	.L2
  35              	.LVL1:
  36              	.L3:
  37              		.loc 1 16 0 is_stmt 0 discriminator 3
  38 0004 0133     		adds	r3, r3, #1
  39              	.LVL2:
  40              	.L2:
  41              		.loc 1 16 0 discriminator 1
  42 0006 092B     		cmp	r3, #9
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 2


  43 0008 FCDD     		ble	.L3
  17:Src/task.c    ****     {
  18:Src/task.c    ****         tcb[i].state == TASK_FREE;
  19:Src/task.c    ****     }
  20:Src/task.c    ****     return 0;
  21:Src/task.c    **** }
  44              		.loc 1 21 0 is_stmt 1
  45 000a 0020     		movs	r0, #0
  46 000c 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE66:
  50              		.section	.text.createTask,"ax",%progbits
  51              		.align	1
  52              		.global	createTask
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  56              		.fpu softvfp
  58              	createTask:
  59              	.LFB67:
  22:Src/task.c    **** 
  23:Src/task.c    **** int createTask( void* (*foo)(void*))
  24:Src/task.c    **** {
  60              		.loc 1 24 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL3:
  65 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  66              	.LCFI0:
  67              		.cfi_def_cfa_offset 24
  68              		.cfi_offset 3, -24
  69              		.cfi_offset 4, -20
  70              		.cfi_offset 5, -16
  71              		.cfi_offset 6, -12
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 0546     		mov	r5, r0
  25:Src/task.c    ****     hw_stack_frame_t* hw_process_frame;
  26:Src/task.c    ****     sw_stack_frame_t* sw_process_frame;
  27:Src/task.c    ****     int i, j;
  28:Src/task.c    **** 
  29:Src/task.c    ****     enterCritical();
  75              		.loc 1 29 0
  76 0004 FFF7FEFF 		bl	enterCritical
  77              	.LVL4:
  30:Src/task.c    ****     for (i = 0; i < MAX_TASK_COUNT; i++)
  78              		.loc 1 30 0
  79 0008 0024     		movs	r4, #0
  80              	.LVL5:
  81              	.L5:
  82              		.loc 1 30 0 is_stmt 0 discriminator 1
  83 000a 092C     		cmp	r4, #9
  84 000c 3ADC     		bgt	.L7
  31:Src/task.c    ****     {
  32:Src/task.c    ****         if (tcb[i].state == TASK_FREE)
  85              		.loc 1 32 0 is_stmt 1
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 3


  86 000e 04EB8403 		add	r3, r4, r4, lsl #2
  87 0012 9A00     		lsls	r2, r3, #2
  88 0014 244B     		ldr	r3, .L13
  89 0016 1344     		add	r3, r3, r2
  90 0018 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
  91 001a 0BB1     		cbz	r3, .L11
  30:Src/task.c    ****     for (i = 0; i < MAX_TASK_COUNT; i++)
  92              		.loc 1 30 0 discriminator 2
  93 001c 0134     		adds	r4, r4, #1
  94              	.LVL6:
  95 001e F4E7     		b	.L5
  96              	.L11:
  33:Src/task.c    ****         {
  34:Src/task.c    ****             tcb[i].sp = (char*)((stackFrame + (MAX_TASK_COUNT * STACK_FRAME_SIZE) - 1 - i * STACK_F
  97              		.loc 1 34 0
  98 0020 40F6DF11 		movw	r1, #2527
  99 0024 A1EB0421 		sub	r1, r1, r4, lsl #8
 100 0028 DFF884C0 		ldr	ip, .L13+8
 101 002c 01EB0C02 		add	r2, r1, ip
 102 0030 1D4F     		ldr	r7, .L13
 103 0032 A300     		lsls	r3, r4, #2
 104 0034 2344     		add	r3, r3, r4
 105 0036 9E00     		lsls	r6, r3, #2
 106 0038 B819     		adds	r0, r7, r6
 107              	.LVL7:
  35:Src/task.c    ****             hw_process_frame = (hw_stack_frame_t*)tcb[i].sp;
  36:Src/task.c    ****             hw_process_frame->r0 = 0;
 108              		.loc 1 36 0
 109 003a 0023     		movs	r3, #0
 110 003c 41F80C30 		str	r3, [r1, ip]
  37:Src/task.c    ****             hw_process_frame->r1 = 0;
 111              		.loc 1 37 0
 112 0040 5360     		str	r3, [r2, #4]
  38:Src/task.c    ****             hw_process_frame->r2 = 0;
 113              		.loc 1 38 0
 114 0042 9360     		str	r3, [r2, #8]
  39:Src/task.c    ****             hw_process_frame->r3 = 0;
 115              		.loc 1 39 0
 116 0044 D360     		str	r3, [r2, #12]
  40:Src/task.c    ****             hw_process_frame->r12 = 0;
 117              		.loc 1 40 0
 118 0046 1361     		str	r3, [r2, #16]
  41:Src/task.c    ****             hw_process_frame->pc = (uint32_t)foo;
 119              		.loc 1 41 0
 120 0048 9561     		str	r5, [r2, #24]
  42:Src/task.c    ****             hw_process_frame->lr = RETURN_THREAD_MODE_EXEC_PSP;
 121              		.loc 1 42 0
 122 004a 6FF00201 		mvn	r1, #2
 123 004e 5161     		str	r1, [r2, #20]
  43:Src/task.c    ****             hw_process_frame->psr = PSR_INIT;
 124              		.loc 1 43 0
 125 0050 4FF00451 		mov	r1, #553648128
 126 0054 D161     		str	r1, [r2, #28]
  44:Src/task.c    **** 
  45:Src/task.c    ****             tcb[i].sp = (char*)((uint32_t)tcb[i].sp - sizeof(sw_stack_frame_t));
 127              		.loc 1 45 0
 128 0056 A2F12001 		sub	r1, r2, #32
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 4


 129 005a B951     		str	r1, [r7, r6]
 130              	.LVL8:
  46:Src/task.c    ****             sw_process_frame = (sw_stack_frame_t*)tcb[i].sp;
  47:Src/task.c    ****             sw_process_frame->r4 = 0;
 131              		.loc 1 47 0
 132 005c 42F8203C 		str	r3, [r2, #-32]
  48:Src/task.c    ****             sw_process_frame->r5 = 0;
 133              		.loc 1 48 0
 134 0060 42F81C3C 		str	r3, [r2, #-28]
  49:Src/task.c    ****             sw_process_frame->r6 = 0;
 135              		.loc 1 49 0
 136 0064 42F8183C 		str	r3, [r2, #-24]
  50:Src/task.c    ****             sw_process_frame->r7 = 0;
 137              		.loc 1 50 0
 138 0068 42F8143C 		str	r3, [r2, #-20]
  51:Src/task.c    ****             sw_process_frame->r8 = 0;
 139              		.loc 1 51 0
 140 006c 42F8103C 		str	r3, [r2, #-16]
  52:Src/task.c    ****             sw_process_frame->r9 = 0;
 141              		.loc 1 52 0
 142 0070 42F80C3C 		str	r3, [r2, #-12]
  53:Src/task.c    ****             sw_process_frame->r10 = 0;
 143              		.loc 1 53 0
 144 0074 42F8083C 		str	r3, [r2, #-8]
  54:Src/task.c    ****             sw_process_frame->r11 = 0;
 145              		.loc 1 54 0
 146 0078 42F8043C 		str	r3, [r2, #-4]
  55:Src/task.c    **** 
  56:Src/task.c    ****             tcb[i].state = TASK_READY;
 147              		.loc 1 56 0
 148 007c 0122     		movs	r2, #1
 149              	.LVL9:
 150 007e 0274     		strb	r2, [r0, #16]
  57:Src/task.c    ****             tcb[i].delay = 0;
 151              		.loc 1 57 0
 152 0080 C360     		str	r3, [r0, #12]
  58:Src/task.c    ****             tcb[i].priority = 0;
 153              		.loc 1 58 0
 154 0082 8360     		str	r3, [r0, #8]
 155              	.LVL10:
 156              	.L7:
  59:Src/task.c    ****             break;
  60:Src/task.c    ****         }
  61:Src/task.c    ****     }
  62:Src/task.c    ****     exitCritical();
 157              		.loc 1 62 0
 158 0084 FFF7FEFF 		bl	exitCritical
 159              	.LVL11:
  63:Src/task.c    **** 
  64:Src/task.c    ****     printf("Created Task %d\tSP: %lx\n", i, (uint32_t)tcb[i].sp);
 160              		.loc 1 64 0
 161 0088 04EB8402 		add	r2, r4, r4, lsl #2
 162 008c 9300     		lsls	r3, r2, #2
 163 008e 064A     		ldr	r2, .L13
 164 0090 D258     		ldr	r2, [r2, r3]
 165 0092 2146     		mov	r1, r4
 166 0094 0548     		ldr	r0, .L13+4
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 5


 167 0096 FFF7FEFF 		bl	printf
 168              	.LVL12:
  65:Src/task.c    ****     if (i == MAX_TASK_COUNT)
 169              		.loc 1 65 0
 170 009a 0A2C     		cmp	r4, #10
 171 009c 01D0     		beq	.L12
 172              	.LVL13:
 173              	.L4:
  66:Src/task.c    ****         return -1;
  67:Src/task.c    ****     else
  68:Src/task.c    ****         return i;
  69:Src/task.c    **** }
 174              		.loc 1 69 0
 175 009e 2046     		mov	r0, r4
 176 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 177              	.LVL14:
 178              	.L12:
  66:Src/task.c    ****         return -1;
 179              		.loc 1 66 0
 180 00a2 4FF0FF34 		mov	r4, #-1
 181              	.LVL15:
 182 00a6 FAE7     		b	.L4
 183              	.L14:
 184              		.align	2
 185              	.L13:
 186 00a8 00000000 		.word	tcb
 187 00ac 00000000 		.word	.LC0
 188 00b0 00000000 		.word	stackFrame
 189              		.cfi_endproc
 190              	.LFE67:
 192              		.section	.text.delTask,"ax",%progbits
 193              		.align	1
 194              		.global	delTask
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu softvfp
 200              	delTask:
 201              	.LFB68:
  70:Src/task.c    **** 
  71:Src/task.c    **** int delTask()
  72:Src/task.c    **** {
 202              		.loc 1 72 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
  73:Src/task.c    ****     return 0;
  74:Src/task.c    **** }
 207              		.loc 1 74 0
 208 0000 0020     		movs	r0, #0
 209 0002 7047     		bx	lr
 210              		.cfi_endproc
 211              	.LFE68:
 213              		.section	.text.taskDelay,"ax",%progbits
 214              		.align	1
 215              		.global	taskDelay
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 6


 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu softvfp
 221              	taskDelay:
 222              	.LFB69:
  75:Src/task.c    **** 
  76:Src/task.c    **** inline int taskDelay(uint32_t value)
  77:Src/task.c    **** {
 223              		.loc 1 77 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LVL16:
 229 0000 30B4     		push	{r4, r5}
 230              	.LCFI1:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 4, -8
 233              		.cfi_offset 5, -4
  78:Src/task.c    ****     tcb[currentTask].delay = value;
 234              		.loc 1 78 0
 235 0002 074B     		ldr	r3, .L18
 236 0004 1C68     		ldr	r4, [r3]
 237 0006 074A     		ldr	r2, .L18+4
 238 0008 A300     		lsls	r3, r4, #2
 239 000a 1D19     		adds	r5, r3, r4
 240 000c A900     		lsls	r1, r5, #2
 241 000e 0D46     		mov	r5, r1
 242 0010 1144     		add	r1, r1, r2
 243 0012 C860     		str	r0, [r1, #12]
  79:Src/task.c    ****     tcb[currentTask].state = TASK_SLEEPING;
 244              		.loc 1 79 0
 245 0014 2A44     		add	r2, r2, r5
 246 0016 0323     		movs	r3, #3
 247 0018 1374     		strb	r3, [r2, #16]
  80:Src/task.c    ****     return 0;
  81:Src/task.c    **** }
 248              		.loc 1 81 0
 249 001a 0020     		movs	r0, #0
 250              	.LVL17:
 251 001c 30BC     		pop	{r4, r5}
 252              	.LCFI2:
 253              		.cfi_restore 5
 254              		.cfi_restore 4
 255              		.cfi_def_cfa_offset 0
 256 001e 7047     		bx	lr
 257              	.L19:
 258              		.align	2
 259              	.L18:
 260 0020 00000000 		.word	.LANCHOR0
 261 0024 00000000 		.word	tcb
 262              		.cfi_endproc
 263              	.LFE69:
 265              		.section	.text.getNextReady,"ax",%progbits
 266              		.align	1
 267              		.global	getNextReady
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 7


 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 271              		.fpu softvfp
 273              	getNextReady:
 274              	.LFB70:
  82:Src/task.c    **** 
  83:Src/task.c    **** inline int getNextReady()
  84:Src/task.c    **** {
 275              		.loc 1 84 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 280              	.LVL18:
  85:Src/task.c    ****     int i, j;
  86:Src/task.c    ****     for (i = 1; i <= MAX_TASK_COUNT; i++)
 281              		.loc 1 86 0
 282 0000 0123     		movs	r3, #1
 283 0002 08E0     		b	.L21
 284              	.LVL19:
 285              	.L22:
  87:Src/task.c    ****     {
  88:Src/task.c    ****         j = currentTask + i;
  89:Src/task.c    ****         if (j >= MAX_TASK_COUNT) j-=MAX_TASK_COUNT;
  90:Src/task.c    ****         if (tcb[j].state == TASK_READY)
 286              		.loc 1 90 0
 287 0004 00EB8002 		add	r2, r0, r0, lsl #2
 288 0008 9100     		lsls	r1, r2, #2
 289 000a 094A     		ldr	r2, .L26
 290 000c 0A44     		add	r2, r2, r1
 291 000e 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 292 0010 012A     		cmp	r2, #1
 293 0012 0BD0     		beq	.L20
  86:Src/task.c    ****     {
 294              		.loc 1 86 0 discriminator 2
 295 0014 0133     		adds	r3, r3, #1
 296              	.LVL20:
 297              	.L21:
  86:Src/task.c    ****     {
 298              		.loc 1 86 0 is_stmt 0 discriminator 1
 299 0016 0A2B     		cmp	r3, #10
 300 0018 06DC     		bgt	.L25
  88:Src/task.c    ****         if (j >= MAX_TASK_COUNT) j-=MAX_TASK_COUNT;
 301              		.loc 1 88 0 is_stmt 1
 302 001a 064A     		ldr	r2, .L26+4
 303 001c 1068     		ldr	r0, [r2]
 304 001e 1844     		add	r0, r0, r3
 305              	.LVL21:
  89:Src/task.c    ****         if (tcb[j].state == TASK_READY)
 306              		.loc 1 89 0
 307 0020 0928     		cmp	r0, #9
 308 0022 EFDD     		ble	.L22
  89:Src/task.c    ****         if (tcb[j].state == TASK_READY)
 309              		.loc 1 89 0 is_stmt 0 discriminator 1
 310 0024 0A38     		subs	r0, r0, #10
 311              	.LVL22:
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 8


 312 0026 EDE7     		b	.L22
 313              	.LVL23:
 314              	.L25:
  91:Src/task.c    ****         {
  92:Src/task.c    ****             return j;
  93:Src/task.c    ****         }
  94:Src/task.c    ****     }
  95:Src/task.c    ****     return NO_SUCH_TASK;
 315              		.loc 1 95 0 is_stmt 1
 316 0028 4FF0FF30 		mov	r0, #-1
 317              	.L20:
  96:Src/task.c    **** }
 318              		.loc 1 96 0
 319 002c 7047     		bx	lr
 320              	.L27:
 321 002e 00BF     		.align	2
 322              	.L26:
 323 0030 00000000 		.word	tcb
 324 0034 00000000 		.word	.LANCHOR0
 325              		.cfi_endproc
 326              	.LFE70:
 328              		.section	.text.switchTaskTo,"ax",%progbits
 329              		.align	1
 330              		.global	switchTaskTo
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu softvfp
 336              	switchTaskTo:
 337              	.LFB71:
  97:Src/task.c    **** 
  98:Src/task.c    **** inline int switchTaskTo(int nextTask)
  99:Src/task.c    **** {
 338              		.loc 1 99 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              	.LVL24:
 343 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 344              	.LCFI3:
 345              		.cfi_def_cfa_offset 24
 346              		.cfi_offset 4, -24
 347              		.cfi_offset 5, -20
 348              		.cfi_offset 6, -16
 349              		.cfi_offset 7, -12
 350              		.cfi_offset 8, -8
 351              		.cfi_offset 14, -4
 352 0004 0646     		mov	r6, r0
 100:Src/task.c    ****     int oldTask = currentTask;
 353              		.loc 1 100 0
 354 0006 1648     		ldr	r0, .L30
 355              	.LVL25:
 356 0008 0168     		ldr	r1, [r0]
 357              	.LVL26:
 101:Src/task.c    ****     tcb[currentTask].state = TASK_READY;
 358              		.loc 1 101 0
 359 000a 164C     		ldr	r4, .L30+4
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 9


 360 000c 8B00     		lsls	r3, r1, #2
 361 000e 5D18     		adds	r5, r3, r1
 362 0010 AA00     		lsls	r2, r5, #2
 363 0012 2244     		add	r2, r2, r4
 364 0014 0125     		movs	r5, #1
 365 0016 1574     		strb	r5, [r2, #16]
 102:Src/task.c    ****     tcb[nextTask].state = TASK_RUNNING;
 366              		.loc 1 102 0
 367 0018 B500     		lsls	r5, r6, #2
 368 001a AA19     		adds	r2, r5, r6
 369 001c 9700     		lsls	r7, r2, #2
 370 001e E219     		adds	r2, r4, r7
 371 0020 4FF0020C 		mov	ip, #2
 372 0024 82F810C0 		strb	ip, [r2, #16]
 103:Src/task.c    ****     currentTask = nextTask;
 373              		.loc 1 103 0
 374 0028 0660     		str	r6, [r0]
 104:Src/task.c    ****     saveContext(&tcb[oldTask].sp);
 375              		.loc 1 104 0
 376 002a 0B44     		add	r3, r3, r1
 377 002c 03FA0CF0 		lsl	r0, r3, ip
 378 0030 2044     		add	r0, r0, r4
 379 0032 FFF7FEFF 		bl	saveContext
 380              	.LVL27:
 105:Src/task.c    ****     logger(&huart1, "ContextSwitcher\n");
 381              		.loc 1 105 0
 382 0036 DFF83880 		ldr	r8, .L30+16
 383 003a 0B49     		ldr	r1, .L30+8
 384 003c 4046     		mov	r0, r8
 385 003e FFF7FEFF 		bl	logger
 386              	.LVL28:
 106:Src/task.c    ****     contextSwitcher(tcb[nextTask].sp);
 387              		.loc 1 106 0
 388 0042 E059     		ldr	r0, [r4, r7]
 389 0044 FFF7FEFF 		bl	contextSwitcher
 390              	.LVL29:
 107:Src/task.c    ****     logger(&huart1, "LoadContext\n");
 391              		.loc 1 107 0
 392 0048 0849     		ldr	r1, .L30+12
 393 004a 4046     		mov	r0, r8
 394 004c FFF7FEFF 		bl	logger
 395              	.LVL30:
 108:Src/task.c    ****     loadContext(&tcb[nextTask].sp);
 396              		.loc 1 108 0
 397 0050 3846     		mov	r0, r7
 398 0052 2044     		add	r0, r0, r4
 399 0054 FFF7FEFF 		bl	loadContext
 400              	.LVL31:
 109:Src/task.c    ****     return 0;
 110:Src/task.c    **** }
 401              		.loc 1 110 0
 402 0058 0020     		movs	r0, #0
 403 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 404              	.LVL32:
 405              	.L31:
 406 005e 00BF     		.align	2
 407              	.L30:
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 10


 408 0060 00000000 		.word	.LANCHOR0
 409 0064 00000000 		.word	tcb
 410 0068 00000000 		.word	.LC1
 411 006c 14000000 		.word	.LC2
 412 0070 00000000 		.word	huart1
 413              		.cfi_endproc
 414              	.LFE71:
 416              		.section	.text.runFirstTask,"ax",%progbits
 417              		.align	1
 418              		.global	runFirstTask
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu softvfp
 424              	runFirstTask:
 425              	.LFB72:
 111:Src/task.c    **** 
 112:Src/task.c    **** inline int runFirstTask(int nextTask)
 113:Src/task.c    **** {
 426              		.loc 1 113 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              	.LVL33:
 431 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 432              	.LCFI4:
 433              		.cfi_def_cfa_offset 24
 434              		.cfi_offset 4, -24
 435              		.cfi_offset 5, -20
 436              		.cfi_offset 6, -16
 437              		.cfi_offset 7, -12
 438              		.cfi_offset 8, -8
 439              		.cfi_offset 14, -4
 440 0004 0546     		mov	r5, r0
 114:Src/task.c    ****     //char* buf[30];
 115:Src/task.c    ****     //memset(buf, 0, 30);
 116:Src/task.c    ****     logger(&huart1, "RunFirstTask\n");
 441              		.loc 1 116 0
 442 0006 184F     		ldr	r7, .L34
 443 0008 1849     		ldr	r1, .L34+4
 444 000a 3846     		mov	r0, r7
 445              	.LVL34:
 446 000c FFF7FEFF 		bl	logger
 447              	.LVL35:
 117:Src/task.c    ****     currentTask = nextTask;
 448              		.loc 1 117 0
 449 0010 174B     		ldr	r3, .L34+8
 450 0012 1D60     		str	r5, [r3]
 118:Src/task.c    ****     tcb[currentTask].state = TASK_RUNNING;
 451              		.loc 1 118 0
 452 0014 174E     		ldr	r6, .L34+12
 453 0016 AC00     		lsls	r4, r5, #2
 454 0018 6219     		adds	r2, r4, r5
 455 001a 9300     		lsls	r3, r2, #2
 456 001c 3344     		add	r3, r3, r6
 457 001e 0222     		movs	r2, #2
 458 0020 1A74     		strb	r2, [r3, #16]
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 11


 119:Src/task.c    ****     //itoa(tcb[nextTask].sp, 16);
 120:Src/task.c    ****     //logger(&huart1, buf);
 121:Src/task.c    ****     logger(&huart1, "ContextSwitcher\n");
 459              		.loc 1 121 0
 460 0022 1549     		ldr	r1, .L34+16
 461 0024 3846     		mov	r0, r7
 462 0026 FFF7FEFF 		bl	logger
 463              	.LVL36:
 122:Src/task.c    ****     printf("Run First Task %d\tSP: %lx\n", nextTask, (uint32_t)tcb[nextTask].sp);
 464              		.loc 1 122 0
 465 002a 6319     		adds	r3, r4, r5
 466 002c 4FEA8308 		lsl	r8, r3, #2
 467 0030 56F80820 		ldr	r2, [r6, r8]
 468 0034 2946     		mov	r1, r5
 469 0036 1148     		ldr	r0, .L34+20
 470 0038 FFF7FEFF 		bl	printf
 471              	.LVL37:
 123:Src/task.c    ****     contextSwitcher(tcb[nextTask].sp);
 472              		.loc 1 123 0
 473 003c 56F80800 		ldr	r0, [r6, r8]
 474 0040 FFF7FEFF 		bl	contextSwitcher
 475              	.LVL38:
 124:Src/task.c    ****     printf("Current SP: %lx\n", getCurrentStackPtr());
 476              		.loc 1 124 0
 477 0044 FFF7FEFF 		bl	getCurrentStackPtr
 478              	.LVL39:
 479 0048 0146     		mov	r1, r0
 480 004a 0D48     		ldr	r0, .L34+24
 481 004c FFF7FEFF 		bl	printf
 482              	.LVL40:
 125:Src/task.c    ****     logger(&huart1, "LoadContext\n");
 483              		.loc 1 125 0
 484 0050 0C49     		ldr	r1, .L34+28
 485 0052 3846     		mov	r0, r7
 486 0054 FFF7FEFF 		bl	logger
 487              	.LVL41:
 126:Src/task.c    ****     loadContext(&tcb[nextTask].sp);
 488              		.loc 1 126 0
 489 0058 4046     		mov	r0, r8
 490 005a 3044     		add	r0, r0, r6
 491 005c FFF7FEFF 		bl	loadContext
 492              	.LVL42:
 127:Src/task.c    ****     return 0;
 128:Src/task.c    **** }
 493              		.loc 1 128 0
 494 0060 0020     		movs	r0, #0
 495 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 496              	.LVL43:
 497              	.L35:
 498 0066 00BF     		.align	2
 499              	.L34:
 500 0068 00000000 		.word	huart1
 501 006c 00000000 		.word	.LC3
 502 0070 00000000 		.word	.LANCHOR0
 503 0074 00000000 		.word	tcb
 504 0078 00000000 		.word	.LC1
 505 007c 10000000 		.word	.LC4
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 12


 506 0080 2C000000 		.word	.LC5
 507 0084 14000000 		.word	.LC2
 508              		.cfi_endproc
 509              	.LFE72:
 511              		.section	.text.task_sysTickHandler,"ax",%progbits
 512              		.align	1
 513              		.global	task_sysTickHandler
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu softvfp
 519              	task_sysTickHandler:
 520              	.LFB73:
 129:Src/task.c    **** 
 130:Src/task.c    **** int task_sysTickHandler()
 131:Src/task.c    **** {
 521              		.loc 1 131 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525 0000 38B5     		push	{r3, r4, r5, lr}
 526              	.LCFI5:
 527              		.cfi_def_cfa_offset 16
 528              		.cfi_offset 3, -16
 529              		.cfi_offset 4, -12
 530              		.cfi_offset 5, -8
 531              		.cfi_offset 14, -4
 132:Src/task.c    ****     logger(&huart1, "Task_Systick\n");
 532              		.loc 1 132 0
 533 0002 1749     		ldr	r1, .L42
 534 0004 1748     		ldr	r0, .L42+4
 535 0006 FFF7FEFF 		bl	logger
 536              	.LVL44:
 133:Src/task.c    **** 
 134:Src/task.c    ****     int i, f;
 135:Src/task.c    ****     f = 0;
 537              		.loc 1 135 0
 538 000a 0025     		movs	r5, #0
 136:Src/task.c    ****     for (i = 0; i < MAX_TASK_COUNT; i++)
 539              		.loc 1 136 0
 540 000c 2C46     		mov	r4, r5
 541 000e 00E0     		b	.L37
 542              	.LVL45:
 543              	.L38:
 544              		.loc 1 136 0 is_stmt 0 discriminator 2
 545 0010 0134     		adds	r4, r4, #1
 546              	.LVL46:
 547              	.L37:
 548              		.loc 1 136 0 discriminator 1
 549 0012 092C     		cmp	r4, #9
 550 0014 21DC     		bgt	.L41
 137:Src/task.c    ****     {
 138:Src/task.c    ****         if (tcb[i].state == TASK_SLEEPING)
 551              		.loc 1 138 0 is_stmt 1
 552 0016 04EB8403 		add	r3, r4, r4, lsl #2
 553 001a 9A00     		lsls	r2, r3, #2
 554 001c 124B     		ldr	r3, .L42+8
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 13


 555 001e 1344     		add	r3, r3, r2
 556 0020 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 557 0022 032B     		cmp	r3, #3
 558 0024 F4D1     		bne	.L38
 139:Src/task.c    ****         {
 140:Src/task.c    ****             logger(&huart1, "Task_Systick_HasSleeping\n");
 559              		.loc 1 140 0
 560 0026 1149     		ldr	r1, .L42+12
 561 0028 0E48     		ldr	r0, .L42+4
 562 002a FFF7FEFF 		bl	logger
 563              	.LVL47:
 141:Src/task.c    ****             tcb[i].delay--;
 564              		.loc 1 141 0
 565 002e A300     		lsls	r3, r4, #2
 566 0030 2344     		add	r3, r3, r4
 567 0032 9900     		lsls	r1, r3, #2
 568 0034 0C4A     		ldr	r2, .L42+8
 569 0036 0A44     		add	r2, r2, r1
 570 0038 D368     		ldr	r3, [r2, #12]
 571 003a 013B     		subs	r3, r3, #1
 572 003c D360     		str	r3, [r2, #12]
 142:Src/task.c    ****             if (tcb[i].delay == 0)
 573              		.loc 1 142 0
 574 003e 002B     		cmp	r3, #0
 575 0040 E6D1     		bne	.L38
 143:Src/task.c    ****             {
 144:Src/task.c    ****                 logger(&huart1, "Task_SystickHandler_NeedResched\n");
 576              		.loc 1 144 0
 577 0042 0B49     		ldr	r1, .L42+16
 578 0044 0748     		ldr	r0, .L42+4
 579 0046 FFF7FEFF 		bl	logger
 580              	.LVL48:
 145:Src/task.c    ****                 f = 1;
 146:Src/task.c    ****                 tcb[i].state = TASK_READY;
 581              		.loc 1 146 0
 582 004a 04EB8403 		add	r3, r4, r4, lsl #2
 583 004e 9A00     		lsls	r2, r3, #2
 584 0050 054B     		ldr	r3, .L42+8
 585 0052 1344     		add	r3, r3, r2
 586 0054 0125     		movs	r5, #1
 587 0056 1D74     		strb	r5, [r3, #16]
 588 0058 DAE7     		b	.L38
 589              	.LVL49:
 590              	.L41:
 147:Src/task.c    ****             }
 148:Src/task.c    ****         }
 149:Src/task.c    ****     }
 150:Src/task.c    ****     return f;
 151:Src/task.c    **** }
 591              		.loc 1 151 0
 592 005a 2846     		mov	r0, r5
 593 005c 38BD     		pop	{r3, r4, r5, pc}
 594              	.LVL50:
 595              	.L43:
 596 005e 00BF     		.align	2
 597              	.L42:
 598 0060 00000000 		.word	.LC6
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 14


 599 0064 00000000 		.word	huart1
 600 0068 00000000 		.word	tcb
 601 006c 10000000 		.word	.LC7
 602 0070 2C000000 		.word	.LC8
 603              		.cfi_endproc
 604              	.LFE73:
 606              		.global	currentTask
 607              		.comm	stackFrame,2560,4
 608              		.comm	tcb,200,4
 609              		.section	.bss.currentTask,"aw",%nobits
 610              		.align	2
 611              		.set	.LANCHOR0,. + 0
 614              	currentTask:
 615 0000 00000000 		.space	4
 616              		.section	.rodata.createTask.str1.4,"aMS",%progbits,1
 617              		.align	2
 618              	.LC0:
 619 0000 43726561 		.ascii	"Created Task %d\011SP: %lx\012\000"
 619      74656420 
 619      5461736B 
 619      20256409 
 619      53503A20 
 620              		.section	.rodata.runFirstTask.str1.4,"aMS",%progbits,1
 621              		.align	2
 622              	.LC3:
 623 0000 52756E46 		.ascii	"RunFirstTask\012\000"
 623      69727374 
 623      5461736B 
 623      0A00
 624 000e 0000     		.space	2
 625              	.LC4:
 626 0010 52756E20 		.ascii	"Run First Task %d\011SP: %lx\012\000"
 626      46697273 
 626      74205461 
 626      736B2025 
 626      64095350 
 627 002b 00       		.space	1
 628              	.LC5:
 629 002c 43757272 		.ascii	"Current SP: %lx\012\000"
 629      656E7420 
 629      53503A20 
 629      256C780A 
 629      00
 630              		.section	.rodata.switchTaskTo.str1.4,"aMS",%progbits,1
 631              		.align	2
 632              	.LC1:
 633 0000 436F6E74 		.ascii	"ContextSwitcher\012\000"
 633      65787453 
 633      77697463 
 633      6865720A 
 633      00
 634 0011 000000   		.space	3
 635              	.LC2:
 636 0014 4C6F6164 		.ascii	"LoadContext\012\000"
 636      436F6E74 
 636      6578740A 
 636      00
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 15


 637              		.section	.rodata.task_sysTickHandler.str1.4,"aMS",%progbits,1
 638              		.align	2
 639              	.LC6:
 640 0000 5461736B 		.ascii	"Task_Systick\012\000"
 640      5F537973 
 640      7469636B 
 640      0A00
 641 000e 0000     		.space	2
 642              	.LC7:
 643 0010 5461736B 		.ascii	"Task_Systick_HasSleeping\012\000"
 643      5F537973 
 643      7469636B 
 643      5F486173 
 643      536C6565 
 644 002a 0000     		.space	2
 645              	.LC8:
 646 002c 5461736B 		.ascii	"Task_SystickHandler_NeedResched\012\000"
 646      5F537973 
 646      7469636B 
 646      48616E64 
 646      6C65725F 
 647              		.text
 648              	.Letext0:
 649              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 650              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 651              		.file 4 "Inc/task_cpu.h"
 652              		.file 5 "Inc/task.h"
 653              		.file 6 "Drivers/CMSIS/Include/core_cm3.h"
 654              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 655              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 656              		.file 9 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 657              		.file 10 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 658              		.file 11 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 659              		.file 12 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 660              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 661              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 662              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 663              		.file 16 "Inc/debug.h"
 664              		.file 17 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 task.c
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:16     .text.initTask:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:23     .text.initTask:00000000 initTask
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:51     .text.createTask:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:58     .text.createTask:00000000 createTask
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:186    .text.createTask:000000a8 $d
                            *COM*:000000c8 tcb
                            *COM*:00000a00 stackFrame
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:193    .text.delTask:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:200    .text.delTask:00000000 delTask
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:214    .text.taskDelay:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:221    .text.taskDelay:00000000 taskDelay
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:260    .text.taskDelay:00000020 $d
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:266    .text.getNextReady:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:273    .text.getNextReady:00000000 getNextReady
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:323    .text.getNextReady:00000030 $d
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:329    .text.switchTaskTo:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:336    .text.switchTaskTo:00000000 switchTaskTo
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:408    .text.switchTaskTo:00000060 $d
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:417    .text.runFirstTask:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:424    .text.runFirstTask:00000000 runFirstTask
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:500    .text.runFirstTask:00000068 $d
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:512    .text.task_sysTickHandler:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:519    .text.task_sysTickHandler:00000000 task_sysTickHandler
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:598    .text.task_sysTickHandler:00000060 $d
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:614    .bss.currentTask:00000000 currentTask
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:610    .bss.currentTask:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:617    .rodata.createTask.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:621    .rodata.runFirstTask.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:631    .rodata.switchTaskTo.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc4QoOFe.s:638    .rodata.task_sysTickHandler.str1.4:00000000 $d

UNDEFINED SYMBOLS
enterCritical
exitCritical
printf
saveContext
logger
contextSwitcher
loadContext
huart1
getCurrentStackPtr
