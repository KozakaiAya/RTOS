ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"task.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.initTask,"ax",%progbits
  16              		.align	1
  17              		.global	initTask
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	initTask:
  24              	.LFB66:
  25              		.file 1 "Src/task.c"
   1:Src/task.c    **** #include "task.h"
   2:Src/task.c    **** 
   3:Src/task.c    **** #include "debug.h"
   4:Src/task.c    **** #include <stdio.h>
   5:Src/task.c    **** 
   6:Src/task.c    **** 
   7:Src/task.c    **** task_control_block_t tcb[MAX_TASK_COUNT];
   8:Src/task.c    **** 
   9:Src/task.c    **** char stackFrame[TASK_STACK_SIZE];
  10:Src/task.c    **** 
  11:Src/task.c    **** uint32_t currentTask = -1;
  12:Src/task.c    **** 
  13:Src/task.c    **** int initTask()
  14:Src/task.c    **** {
  26              		.loc 1 14 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  15:Src/task.c    ****     int i;
  16:Src/task.c    ****     for (i = 0;i < MAX_TASK_COUNT; i++)
  32              		.loc 1 16 0
  33 0000 0023     		movs	r3, #0
  34 0002 00E0     		b	.L2
  35              	.LVL1:
  36              	.L3:
  37              		.loc 1 16 0 is_stmt 0 discriminator 3
  38 0004 0133     		adds	r3, r3, #1
  39              	.LVL2:
  40              	.L2:
  41              		.loc 1 16 0 discriminator 1
  42 0006 0F2B     		cmp	r3, #15
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 2


  43 0008 FCDD     		ble	.L3
  17:Src/task.c    ****     {
  18:Src/task.c    ****         tcb[i].state == TASK_FREE;
  19:Src/task.c    ****     }
  20:Src/task.c    ****     return 0;
  21:Src/task.c    **** }
  44              		.loc 1 21 0 is_stmt 1
  45 000a 0020     		movs	r0, #0
  46 000c 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE66:
  50              		.section	.text.createTask,"ax",%progbits
  51              		.align	1
  52              		.global	createTask
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  56              		.fpu softvfp
  58              	createTask:
  59              	.LFB67:
  22:Src/task.c    **** 
  23:Src/task.c    **** int createTask( void* (*foo)(void*))
  24:Src/task.c    **** {
  60              		.loc 1 24 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL3:
  65 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  66              	.LCFI0:
  67              		.cfi_def_cfa_offset 40
  68              		.cfi_offset 3, -40
  69              		.cfi_offset 4, -36
  70              		.cfi_offset 5, -32
  71              		.cfi_offset 6, -28
  72              		.cfi_offset 7, -24
  73              		.cfi_offset 8, -20
  74              		.cfi_offset 9, -16
  75              		.cfi_offset 10, -12
  76              		.cfi_offset 11, -8
  77              		.cfi_offset 14, -4
  78 0004 0646     		mov	r6, r0
  25:Src/task.c    ****     hw_stack_frame_t* hw_process_frame;
  26:Src/task.c    ****     sw_stack_frame_t* sw_process_frame;
  27:Src/task.c    ****     int i, j;
  28:Src/task.c    **** 
  29:Src/task.c    ****     enterCritical();
  79              		.loc 1 29 0
  80 0006 FFF7FEFF 		bl	enterCritical
  81              	.LVL4:
  30:Src/task.c    ****     for (i = 0; i < MAX_TASK_COUNT; i++)
  82              		.loc 1 30 0
  83 000a 0024     		movs	r4, #0
  84              	.LVL5:
  85              	.L5:
  86              		.loc 1 30 0 is_stmt 0 discriminator 1
  87 000c 0F2C     		cmp	r4, #15
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 3


  88 000e 4CDC     		bgt	.L7
  31:Src/task.c    ****     {
  32:Src/task.c    ****         if (tcb[i].state == TASK_FREE)
  89              		.loc 1 32 0 is_stmt 1
  90 0010 04EB8403 		add	r3, r4, r4, lsl #2
  91 0014 9A00     		lsls	r2, r3, #2
  92 0016 2E4B     		ldr	r3, .L13
  93 0018 1344     		add	r3, r3, r2
  94 001a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
  95 001c 0BB1     		cbz	r3, .L11
  30:Src/task.c    ****     for (i = 0; i < MAX_TASK_COUNT; i++)
  96              		.loc 1 30 0 discriminator 2
  97 001e 0134     		adds	r4, r4, #1
  98              	.LVL6:
  99 0020 F4E7     		b	.L5
 100              	.L11:
  33:Src/task.c    ****         {
  34:Src/task.c    ****             tcb[i].sp = (char*)((stackFrame + (TASK_STACK_SIZE) - 1 - i * STACK_FRAME_SIZE) - sizeo
 101              		.loc 1 34 0
 102 0022 2202     		lsls	r2, r4, #8
 103 0024 C2F57E62 		rsb	r2, r2, #4064
 104 0028 2A4B     		ldr	r3, .L13+4
 105 002a 1A44     		add	r2, r2, r3
 106 002c DFF8A090 		ldr	r9, .L13
 107 0030 A300     		lsls	r3, r4, #2
 108 0032 2344     		add	r3, r3, r4
 109 0034 4FEA8308 		lsl	r8, r3, #2
 110 0038 09EB080A 		add	r10, r9, r8
 111 003c 49F80820 		str	r2, [r9, r8]
  35:Src/task.c    ****             printf("Task %d init, SP = %lx\n", i, tcb[i].sp);
 112              		.loc 1 35 0
 113 0040 DFF898B0 		ldr	fp, .L13+12
 114 0044 2146     		mov	r1, r4
 115 0046 5846     		mov	r0, fp
 116 0048 FFF7FEFF 		bl	printf
 117              	.LVL7:
  36:Src/task.c    ****             hw_process_frame = (hw_stack_frame_t*)tcb[i].sp;
 118              		.loc 1 36 0
 119 004c 59F80870 		ldr	r7, [r9, r8]
 120              	.LVL8:
  37:Src/task.c    ****             hw_process_frame->r0 = 0;
 121              		.loc 1 37 0
 122 0050 0025     		movs	r5, #0
 123 0052 3D60     		str	r5, [r7]
  38:Src/task.c    ****             hw_process_frame->r1 = 0;
 124              		.loc 1 38 0
 125 0054 7D60     		str	r5, [r7, #4]
  39:Src/task.c    ****             hw_process_frame->r2 = 0;
 126              		.loc 1 39 0
 127 0056 BD60     		str	r5, [r7, #8]
  40:Src/task.c    ****             hw_process_frame->r3 = 0;
 128              		.loc 1 40 0
 129 0058 FD60     		str	r5, [r7, #12]
  41:Src/task.c    ****             hw_process_frame->r12 = 0;
 130              		.loc 1 41 0
 131 005a 3D61     		str	r5, [r7, #16]
  42:Src/task.c    ****             hw_process_frame->lr = RETURN_THREAD_MODE_EXEC_PSP;
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 4


 132              		.loc 1 42 0
 133 005c 6FF00203 		mvn	r3, #2
 134 0060 7B61     		str	r3, [r7, #20]
  43:Src/task.c    ****             hw_process_frame->pc = (uint32_t)foo & TASK_PC_MASK;
 135              		.loc 1 43 0
 136 0062 26F00106 		bic	r6, r6, #1
 137              	.LVL9:
 138 0066 BE61     		str	r6, [r7, #24]
  44:Src/task.c    ****             hw_process_frame->psr = PSR_INIT;
 139              		.loc 1 44 0
 140 0068 4FF00453 		mov	r3, #553648128
 141 006c FB61     		str	r3, [r7, #28]
  45:Src/task.c    **** 
  46:Src/task.c    ****             tcb[i].sp = (char*)((uint32_t)tcb[i].sp - sizeof(sw_stack_frame_t));
 142              		.loc 1 46 0
 143 006e 59F80820 		ldr	r2, [r9, r8]
 144 0072 283A     		subs	r2, r2, #40
 145 0074 49F80820 		str	r2, [r9, r8]
  47:Src/task.c    ****             printf("Task %d init, SP = %lx\n", i, tcb[i].sp);
 146              		.loc 1 47 0
 147 0078 2146     		mov	r1, r4
 148 007a 5846     		mov	r0, fp
 149 007c FFF7FEFF 		bl	printf
 150              	.LVL10:
  48:Src/task.c    ****             sw_process_frame = (sw_stack_frame_t*)tcb[i].sp;
 151              		.loc 1 48 0
 152 0080 59F80830 		ldr	r3, [r9, r8]
 153              	.LVL11:
  49:Src/task.c    ****             sw_process_frame->lr = hw_process_frame->pc;
 154              		.loc 1 49 0
 155 0084 BA69     		ldr	r2, [r7, #24]
 156 0086 1A60     		str	r2, [r3]
  50:Src/task.c    ****             sw_process_frame->control = 0x3;
 157              		.loc 1 50 0
 158 0088 0322     		movs	r2, #3
 159 008a 5A60     		str	r2, [r3, #4]
  51:Src/task.c    ****             sw_process_frame->r4 = 0;
 160              		.loc 1 51 0
 161 008c 9D60     		str	r5, [r3, #8]
  52:Src/task.c    ****             sw_process_frame->r5 = 0;
 162              		.loc 1 52 0
 163 008e DD60     		str	r5, [r3, #12]
  53:Src/task.c    ****             sw_process_frame->r6 = 0;
 164              		.loc 1 53 0
 165 0090 1D61     		str	r5, [r3, #16]
  54:Src/task.c    ****             sw_process_frame->r7 = 0;
 166              		.loc 1 54 0
 167 0092 5D61     		str	r5, [r3, #20]
  55:Src/task.c    ****             sw_process_frame->r8 = 0;
 168              		.loc 1 55 0
 169 0094 9D61     		str	r5, [r3, #24]
  56:Src/task.c    ****             sw_process_frame->r9 = 0;
 170              		.loc 1 56 0
 171 0096 DD61     		str	r5, [r3, #28]
  57:Src/task.c    ****             sw_process_frame->r10 = 0;
 172              		.loc 1 57 0
 173 0098 1D62     		str	r5, [r3, #32]
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 5


  58:Src/task.c    ****             sw_process_frame->r11 = 0;
 174              		.loc 1 58 0
 175 009a 5D62     		str	r5, [r3, #36]
  59:Src/task.c    **** 
  60:Src/task.c    ****             tcb[i].state = TASK_READY;
 176              		.loc 1 60 0
 177 009c 0123     		movs	r3, #1
 178              	.LVL12:
 179 009e 8AF81030 		strb	r3, [r10, #16]
  61:Src/task.c    ****             tcb[i].delay = 0;
 180              		.loc 1 61 0
 181 00a2 CAF80C50 		str	r5, [r10, #12]
  62:Src/task.c    ****             tcb[i].priority = 0;
 182              		.loc 1 62 0
 183 00a6 CAF80850 		str	r5, [r10, #8]
 184              	.LVL13:
 185              	.L7:
  63:Src/task.c    ****             break;
  64:Src/task.c    ****         }
  65:Src/task.c    ****     }
  66:Src/task.c    ****     exitCritical();
 186              		.loc 1 66 0
 187 00aa FFF7FEFF 		bl	exitCritical
 188              	.LVL14:
  67:Src/task.c    **** 
  68:Src/task.c    ****     printf("Created Task %d\tSP: %lx\n", i, (uint32_t)tcb[i].sp);
 189              		.loc 1 68 0
 190 00ae 04EB8402 		add	r2, r4, r4, lsl #2
 191 00b2 9300     		lsls	r3, r2, #2
 192 00b4 064A     		ldr	r2, .L13
 193 00b6 D258     		ldr	r2, [r2, r3]
 194 00b8 2146     		mov	r1, r4
 195 00ba 0748     		ldr	r0, .L13+8
 196 00bc FFF7FEFF 		bl	printf
 197              	.LVL15:
  69:Src/task.c    ****     if (i == MAX_TASK_COUNT)
 198              		.loc 1 69 0
 199 00c0 102C     		cmp	r4, #16
 200 00c2 02D0     		beq	.L12
 201              	.LVL16:
 202              	.L4:
  70:Src/task.c    ****         return -1;
  71:Src/task.c    ****     else
  72:Src/task.c    ****         return i;
  73:Src/task.c    **** }
 203              		.loc 1 73 0
 204 00c4 2046     		mov	r0, r4
 205 00c6 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 206              	.LVL17:
 207              	.L12:
  70:Src/task.c    ****         return -1;
 208              		.loc 1 70 0
 209 00ca 4FF0FF34 		mov	r4, #-1
 210              	.LVL18:
 211 00ce F9E7     		b	.L4
 212              	.L14:
 213              		.align	2
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 6


 214              	.L13:
 215 00d0 00000000 		.word	tcb
 216 00d4 00000000 		.word	stackFrame
 217 00d8 18000000 		.word	.LC1
 218 00dc 00000000 		.word	.LC0
 219              		.cfi_endproc
 220              	.LFE67:
 222              		.section	.text.delTask,"ax",%progbits
 223              		.align	1
 224              		.global	delTask
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu softvfp
 230              	delTask:
 231              	.LFB68:
  74:Src/task.c    **** 
  75:Src/task.c    **** int delTask()
  76:Src/task.c    **** {
 232              		.loc 1 76 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
  77:Src/task.c    ****     return 0;
  78:Src/task.c    **** }
 237              		.loc 1 78 0
 238 0000 0020     		movs	r0, #0
 239 0002 7047     		bx	lr
 240              		.cfi_endproc
 241              	.LFE68:
 243              		.section	.text.taskDelay,"ax",%progbits
 244              		.align	1
 245              		.global	taskDelay
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu softvfp
 251              	taskDelay:
 252              	.LFB69:
  79:Src/task.c    **** 
  80:Src/task.c    **** inline int taskDelay(uint32_t value)
  81:Src/task.c    **** {
 253              		.loc 1 81 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL19:
 259 0000 30B4     		push	{r4, r5}
 260              	.LCFI1:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 4, -8
 263              		.cfi_offset 5, -4
  82:Src/task.c    ****     tcb[currentTask].delay = value;
 264              		.loc 1 82 0
 265 0002 074B     		ldr	r3, .L18
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 7


 266 0004 1C68     		ldr	r4, [r3]
 267 0006 074A     		ldr	r2, .L18+4
 268 0008 A300     		lsls	r3, r4, #2
 269 000a 1D19     		adds	r5, r3, r4
 270 000c A900     		lsls	r1, r5, #2
 271 000e 0D46     		mov	r5, r1
 272 0010 1144     		add	r1, r1, r2
 273 0012 C860     		str	r0, [r1, #12]
  83:Src/task.c    ****     tcb[currentTask].state = TASK_SLEEPING;
 274              		.loc 1 83 0
 275 0014 2A44     		add	r2, r2, r5
 276 0016 0323     		movs	r3, #3
 277 0018 1374     		strb	r3, [r2, #16]
  84:Src/task.c    ****     return 0;
  85:Src/task.c    **** }
 278              		.loc 1 85 0
 279 001a 0020     		movs	r0, #0
 280              	.LVL20:
 281 001c 30BC     		pop	{r4, r5}
 282              	.LCFI2:
 283              		.cfi_restore 5
 284              		.cfi_restore 4
 285              		.cfi_def_cfa_offset 0
 286 001e 7047     		bx	lr
 287              	.L19:
 288              		.align	2
 289              	.L18:
 290 0020 00000000 		.word	.LANCHOR0
 291 0024 00000000 		.word	tcb
 292              		.cfi_endproc
 293              	.LFE69:
 295              		.section	.text.getNextReady,"ax",%progbits
 296              		.align	1
 297              		.global	getNextReady
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu softvfp
 303              	getNextReady:
 304              	.LFB70:
  86:Src/task.c    **** 
  87:Src/task.c    **** inline int getNextReady()
  88:Src/task.c    **** {
 305              		.loc 1 88 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310              	.LVL21:
  89:Src/task.c    ****     int i, j;
  90:Src/task.c    ****     for (i = 1; i <= MAX_TASK_COUNT; i++)
 311              		.loc 1 90 0
 312 0000 0123     		movs	r3, #1
 313 0002 08E0     		b	.L21
 314              	.LVL22:
 315              	.L22:
  91:Src/task.c    ****     {
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 8


  92:Src/task.c    ****         j = currentTask + i;
  93:Src/task.c    ****         if (j >= MAX_TASK_COUNT) j-=MAX_TASK_COUNT;
  94:Src/task.c    ****         if (tcb[j].state == TASK_READY)
 316              		.loc 1 94 0
 317 0004 00EB8002 		add	r2, r0, r0, lsl #2
 318 0008 9100     		lsls	r1, r2, #2
 319 000a 094A     		ldr	r2, .L26
 320 000c 0A44     		add	r2, r2, r1
 321 000e 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 322 0010 012A     		cmp	r2, #1
 323 0012 0BD0     		beq	.L20
  90:Src/task.c    ****     {
 324              		.loc 1 90 0 discriminator 2
 325 0014 0133     		adds	r3, r3, #1
 326              	.LVL23:
 327              	.L21:
  90:Src/task.c    ****     {
 328              		.loc 1 90 0 is_stmt 0 discriminator 1
 329 0016 102B     		cmp	r3, #16
 330 0018 06DC     		bgt	.L25
  92:Src/task.c    ****         if (j >= MAX_TASK_COUNT) j-=MAX_TASK_COUNT;
 331              		.loc 1 92 0 is_stmt 1
 332 001a 064A     		ldr	r2, .L26+4
 333 001c 1068     		ldr	r0, [r2]
 334 001e 1844     		add	r0, r0, r3
 335              	.LVL24:
  93:Src/task.c    ****         if (tcb[j].state == TASK_READY)
 336              		.loc 1 93 0
 337 0020 0F28     		cmp	r0, #15
 338 0022 EFDD     		ble	.L22
  93:Src/task.c    ****         if (tcb[j].state == TASK_READY)
 339              		.loc 1 93 0 is_stmt 0 discriminator 1
 340 0024 1038     		subs	r0, r0, #16
 341              	.LVL25:
 342 0026 EDE7     		b	.L22
 343              	.LVL26:
 344              	.L25:
  95:Src/task.c    ****         {
  96:Src/task.c    ****             return j;
  97:Src/task.c    ****         }
  98:Src/task.c    ****     }
  99:Src/task.c    ****     return NO_SUCH_TASK;
 345              		.loc 1 99 0 is_stmt 1
 346 0028 4FF0FF30 		mov	r0, #-1
 347              	.L20:
 100:Src/task.c    **** }
 348              		.loc 1 100 0
 349 002c 7047     		bx	lr
 350              	.L27:
 351 002e 00BF     		.align	2
 352              	.L26:
 353 0030 00000000 		.word	tcb
 354 0034 00000000 		.word	.LANCHOR0
 355              		.cfi_endproc
 356              	.LFE70:
 358              		.section	.text.switchTaskTo,"ax",%progbits
 359              		.align	1
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 9


 360              		.global	switchTaskTo
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu softvfp
 366              	switchTaskTo:
 367              	.LFB71:
 101:Src/task.c    **** 
 102:Src/task.c    **** inline int switchTaskTo(int nextTask)
 103:Src/task.c    **** {
 368              		.loc 1 103 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              	.LVL27:
 373 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 374              	.LCFI3:
 375              		.cfi_def_cfa_offset 24
 376              		.cfi_offset 3, -24
 377              		.cfi_offset 4, -20
 378              		.cfi_offset 5, -16
 379              		.cfi_offset 6, -12
 380              		.cfi_offset 7, -8
 381              		.cfi_offset 14, -4
 382 0002 0646     		mov	r6, r0
 104:Src/task.c    ****     int oldTask = currentTask;
 383              		.loc 1 104 0
 384 0004 1348     		ldr	r0, .L30
 385              	.LVL28:
 386 0006 0168     		ldr	r1, [r0]
 387              	.LVL29:
 105:Src/task.c    ****     tcb[currentTask].state = TASK_READY;
 388              		.loc 1 105 0
 389 0008 134D     		ldr	r5, .L30+4
 390 000a 8B00     		lsls	r3, r1, #2
 391 000c 5C18     		adds	r4, r3, r1
 392 000e A200     		lsls	r2, r4, #2
 393 0010 2A44     		add	r2, r2, r5
 394 0012 0124     		movs	r4, #1
 395 0014 1474     		strb	r4, [r2, #16]
 106:Src/task.c    ****     tcb[nextTask].state = TASK_RUNNING;
 396              		.loc 1 106 0
 397 0016 B400     		lsls	r4, r6, #2
 398 0018 A719     		adds	r7, r4, r6
 399 001a BA00     		lsls	r2, r7, #2
 400 001c 2A44     		add	r2, r2, r5
 401 001e 0227     		movs	r7, #2
 402 0020 1774     		strb	r7, [r2, #16]
 107:Src/task.c    ****     currentTask = nextTask;
 403              		.loc 1 107 0
 404 0022 0660     		str	r6, [r0]
 108:Src/task.c    ****     saveContext(&tcb[oldTask].sp);
 405              		.loc 1 108 0
 406 0024 0B44     		add	r3, r3, r1
 407 0026 03FA07F0 		lsl	r0, r3, r7
 408 002a 2844     		add	r0, r0, r5
 409 002c FFF7FEFF 		bl	saveContext
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 10


 410              	.LVL30:
 109:Src/task.c    ****     logger(&huart1, "ContextSwitcher\n");
 411              		.loc 1 109 0
 412 0030 0A4F     		ldr	r7, .L30+8
 413 0032 0B49     		ldr	r1, .L30+12
 414 0034 3846     		mov	r0, r7
 415 0036 FFF7FEFF 		bl	logger
 416              	.LVL31:
 110:Src/task.c    ****     contextSwitcher(tcb[nextTask].sp);
 417              		.loc 1 110 0
 418 003a 3444     		add	r4, r4, r6
 419 003c A300     		lsls	r3, r4, #2
 420 003e E858     		ldr	r0, [r5, r3]
 421 0040 FFF7FEFF 		bl	contextSwitcher
 422              	.LVL32:
 111:Src/task.c    ****     logger(&huart1, "LoadContext\n");
 423              		.loc 1 111 0
 424 0044 0749     		ldr	r1, .L30+16
 425 0046 3846     		mov	r0, r7
 426 0048 FFF7FEFF 		bl	logger
 427              	.LVL33:
 112:Src/task.c    ****     loadContext();
 428              		.loc 1 112 0
 429 004c FFF7FEFF 		bl	loadContext
 430              	.LVL34:
 113:Src/task.c    ****     return 0;
 114:Src/task.c    **** }
 431              		.loc 1 114 0
 432 0050 0020     		movs	r0, #0
 433 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 434              	.LVL35:
 435              	.L31:
 436              		.align	2
 437              	.L30:
 438 0054 00000000 		.word	.LANCHOR0
 439 0058 00000000 		.word	tcb
 440 005c 00000000 		.word	huart1
 441 0060 00000000 		.word	.LC2
 442 0064 14000000 		.word	.LC3
 443              		.cfi_endproc
 444              	.LFE71:
 446              		.section	.text.runFirstTask,"ax",%progbits
 447              		.align	1
 448              		.global	runFirstTask
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu softvfp
 454              	runFirstTask:
 455              	.LFB72:
 115:Src/task.c    **** 
 116:Src/task.c    **** inline int runFirstTask(int nextTask)
 117:Src/task.c    **** {
 456              		.loc 1 117 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 11


 460              	.LVL36:
 461 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 462              	.LCFI4:
 463              		.cfi_def_cfa_offset 24
 464              		.cfi_offset 3, -24
 465              		.cfi_offset 4, -20
 466              		.cfi_offset 5, -16
 467              		.cfi_offset 6, -12
 468              		.cfi_offset 7, -8
 469              		.cfi_offset 14, -4
 470 0002 0646     		mov	r6, r0
 118:Src/task.c    ****     //char* buf[30];
 119:Src/task.c    ****     //memset(buf, 0, 30);
 120:Src/task.c    ****     logger(&huart1, "RunFirstTask\n");
 471              		.loc 1 120 0
 472 0004 144D     		ldr	r5, .L34
 473 0006 1549     		ldr	r1, .L34+4
 474 0008 2846     		mov	r0, r5
 475              	.LVL37:
 476 000a FFF7FEFF 		bl	logger
 477              	.LVL38:
 121:Src/task.c    ****     currentTask = nextTask;
 478              		.loc 1 121 0
 479 000e 144B     		ldr	r3, .L34+8
 480 0010 1E60     		str	r6, [r3]
 122:Src/task.c    ****     tcb[currentTask].state = TASK_RUNNING;
 481              		.loc 1 122 0
 482 0012 144F     		ldr	r7, .L34+12
 483 0014 B400     		lsls	r4, r6, #2
 484 0016 A219     		adds	r2, r4, r6
 485 0018 9300     		lsls	r3, r2, #2
 486 001a 3B44     		add	r3, r3, r7
 487 001c 0222     		movs	r2, #2
 488 001e 1A74     		strb	r2, [r3, #16]
 123:Src/task.c    ****     //itoa(tcb[nextTask].sp, 16);
 124:Src/task.c    ****     //logger(&huart1, buf);
 125:Src/task.c    ****     logger(&huart1, "ContextSwitcher\n");
 489              		.loc 1 125 0
 490 0020 1149     		ldr	r1, .L34+16
 491 0022 2846     		mov	r0, r5
 492 0024 FFF7FEFF 		bl	logger
 493              	.LVL39:
 126:Src/task.c    **** //    printf("Run First Task %d\tSP: %lx\n", nextTask, (uint32_t)tcb[nextTask].sp);
 127:Src/task.c    **** //    printf("Current SP: %lx\n", getCurrentStackPtr());
 128:Src/task.c    ****     contextSwitcher(tcb[nextTask].sp);
 494              		.loc 1 128 0
 495 0028 3444     		add	r4, r4, r6
 496 002a A300     		lsls	r3, r4, #2
 497 002c F858     		ldr	r0, [r7, r3]
 498 002e FFF7FEFF 		bl	contextSwitcher
 499              	.LVL40:
 129:Src/task.c    ****     printf("Current SP: %lx\n", getCurrentStackPtr());
 500              		.loc 1 129 0
 501 0032 FFF7FEFF 		bl	getCurrentStackPtr
 502              	.LVL41:
 503 0036 0146     		mov	r1, r0
 504 0038 0C48     		ldr	r0, .L34+20
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 12


 505 003a FFF7FEFF 		bl	printf
 506              	.LVL42:
 130:Src/task.c    ****     logger(&huart1, "LoadContext\n");
 507              		.loc 1 130 0
 508 003e 0C49     		ldr	r1, .L34+24
 509 0040 2846     		mov	r0, r5
 510 0042 FFF7FEFF 		bl	logger
 511              	.LVL43:
 131:Src/task.c    ****     loadContext();
 512              		.loc 1 131 0
 513 0046 FFF7FEFF 		bl	loadContext
 514              	.LVL44:
 132:Src/task.c    ****     logger(&huart1, "Load Context Returned\n");
 515              		.loc 1 132 0
 516 004a 0A49     		ldr	r1, .L34+28
 517 004c 2846     		mov	r0, r5
 518 004e FFF7FEFF 		bl	logger
 519              	.LVL45:
 133:Src/task.c    ****     return 0;
 134:Src/task.c    **** }
 520              		.loc 1 134 0
 521 0052 0020     		movs	r0, #0
 522 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 523              	.LVL46:
 524              	.L35:
 525 0056 00BF     		.align	2
 526              	.L34:
 527 0058 00000000 		.word	huart1
 528 005c 00000000 		.word	.LC4
 529 0060 00000000 		.word	.LANCHOR0
 530 0064 00000000 		.word	tcb
 531 0068 00000000 		.word	.LC2
 532 006c 10000000 		.word	.LC5
 533 0070 14000000 		.word	.LC3
 534 0074 24000000 		.word	.LC6
 535              		.cfi_endproc
 536              	.LFE72:
 538              		.section	.text.task_sysTickHandler,"ax",%progbits
 539              		.align	1
 540              		.global	task_sysTickHandler
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 544              		.fpu softvfp
 546              	task_sysTickHandler:
 547              	.LFB73:
 135:Src/task.c    **** 
 136:Src/task.c    **** int task_sysTickHandler()
 137:Src/task.c    **** {
 548              		.loc 1 137 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552 0000 38B5     		push	{r3, r4, r5, lr}
 553              	.LCFI5:
 554              		.cfi_def_cfa_offset 16
 555              		.cfi_offset 3, -16
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 13


 556              		.cfi_offset 4, -12
 557              		.cfi_offset 5, -8
 558              		.cfi_offset 14, -4
 138:Src/task.c    ****     int i, f;
 139:Src/task.c    **** 
 140:Src/task.c    ****     uint32_t temp;
 141:Src/task.c    ****     logger(&huart1, "Task_Systick\n");
 559              		.loc 1 141 0
 560 0002 1949     		ldr	r1, .L42
 561 0004 1948     		ldr	r0, .L42+4
 562 0006 FFF7FEFF 		bl	logger
 563              	.LVL47:
 142:Src/task.c    ****     asm volatile (
 564              		.loc 1 142 0
 565              		.syntax unified
 566              	@ 142 "Src/task.c" 1
 567 000a 7146     		MOV r1, lr
 568              	@ 0 "" 2
 569              	.LVL48:
 143:Src/task.c    ****         "MOV %0, lr"
 144:Src/task.c    ****         : "=r" (temp)
 145:Src/task.c    ****     );
 146:Src/task.c    ****     printf("Current LR: %lx\n", temp);
 570              		.loc 1 146 0
 571              		.thumb
 572              		.syntax unified
 573 000c 1848     		ldr	r0, .L42+8
 574 000e FFF7FEFF 		bl	printf
 575              	.LVL49:
 147:Src/task.c    **** 
 148:Src/task.c    ****     f = 0;
 576              		.loc 1 148 0
 577 0012 0025     		movs	r5, #0
 149:Src/task.c    ****     for (i = 0; i < MAX_TASK_COUNT; i++)
 578              		.loc 1 149 0
 579 0014 2C46     		mov	r4, r5
 580 0016 00E0     		b	.L37
 581              	.LVL50:
 582              	.L38:
 583              		.loc 1 149 0 is_stmt 0 discriminator 2
 584 0018 0134     		adds	r4, r4, #1
 585              	.LVL51:
 586              	.L37:
 587              		.loc 1 149 0 discriminator 1
 588 001a 0F2C     		cmp	r4, #15
 589 001c 21DC     		bgt	.L41
 150:Src/task.c    ****     {
 151:Src/task.c    ****         if (tcb[i].state == TASK_SLEEPING)
 590              		.loc 1 151 0 is_stmt 1
 591 001e 04EB8403 		add	r3, r4, r4, lsl #2
 592 0022 9A00     		lsls	r2, r3, #2
 593 0024 134B     		ldr	r3, .L42+12
 594 0026 1344     		add	r3, r3, r2
 595 0028 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 596 002a 032B     		cmp	r3, #3
 597 002c F4D1     		bne	.L38
 152:Src/task.c    ****         {
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 14


 153:Src/task.c    ****             logger(&huart1, "Task_Systick_HasSleeping\n");
 598              		.loc 1 153 0
 599 002e 1249     		ldr	r1, .L42+16
 600 0030 0E48     		ldr	r0, .L42+4
 601 0032 FFF7FEFF 		bl	logger
 602              	.LVL52:
 154:Src/task.c    ****             tcb[i].delay--;
 603              		.loc 1 154 0
 604 0036 A300     		lsls	r3, r4, #2
 605 0038 2344     		add	r3, r3, r4
 606 003a 9900     		lsls	r1, r3, #2
 607 003c 0D4A     		ldr	r2, .L42+12
 608 003e 0A44     		add	r2, r2, r1
 609 0040 D368     		ldr	r3, [r2, #12]
 610 0042 013B     		subs	r3, r3, #1
 611 0044 D360     		str	r3, [r2, #12]
 155:Src/task.c    ****             if (tcb[i].delay == 0)
 612              		.loc 1 155 0
 613 0046 002B     		cmp	r3, #0
 614 0048 E6D1     		bne	.L38
 156:Src/task.c    ****             {
 157:Src/task.c    ****                 logger(&huart1, "Task_SystickHandler_NeedResched\n");
 615              		.loc 1 157 0
 616 004a 0C49     		ldr	r1, .L42+20
 617 004c 0748     		ldr	r0, .L42+4
 618 004e FFF7FEFF 		bl	logger
 619              	.LVL53:
 158:Src/task.c    ****                 f = 1;
 159:Src/task.c    ****                 tcb[i].state = TASK_READY;
 620              		.loc 1 159 0
 621 0052 04EB8403 		add	r3, r4, r4, lsl #2
 622 0056 9A00     		lsls	r2, r3, #2
 623 0058 064B     		ldr	r3, .L42+12
 624 005a 1344     		add	r3, r3, r2
 625 005c 0125     		movs	r5, #1
 626 005e 1D74     		strb	r5, [r3, #16]
 627 0060 DAE7     		b	.L38
 628              	.LVL54:
 629              	.L41:
 160:Src/task.c    ****             }
 161:Src/task.c    ****         }
 162:Src/task.c    ****     }
 163:Src/task.c    ****     return f;
 164:Src/task.c    **** }
 630              		.loc 1 164 0
 631 0062 2846     		mov	r0, r5
 632 0064 38BD     		pop	{r3, r4, r5, pc}
 633              	.LVL55:
 634              	.L43:
 635 0066 00BF     		.align	2
 636              	.L42:
 637 0068 00000000 		.word	.LC7
 638 006c 00000000 		.word	huart1
 639 0070 10000000 		.word	.LC8
 640 0074 00000000 		.word	tcb
 641 0078 24000000 		.word	.LC9
 642 007c 40000000 		.word	.LC10
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 15


 643              		.cfi_endproc
 644              	.LFE73:
 646              		.global	currentTask
 647              		.comm	stackFrame,4097,4
 648              		.comm	tcb,320,4
 649              		.section	.data.currentTask,"aw",%progbits
 650              		.align	2
 651              		.set	.LANCHOR0,. + 0
 654              	currentTask:
 655 0000 FFFFFFFF 		.word	-1
 656              		.section	.rodata.createTask.str1.4,"aMS",%progbits,1
 657              		.align	2
 658              	.LC0:
 659 0000 5461736B 		.ascii	"Task %d init, SP = %lx\012\000"
 659      20256420 
 659      696E6974 
 659      2C205350 
 659      203D2025 
 660              	.LC1:
 661 0018 43726561 		.ascii	"Created Task %d\011SP: %lx\012\000"
 661      74656420 
 661      5461736B 
 661      20256409 
 661      53503A20 
 662              		.section	.rodata.runFirstTask.str1.4,"aMS",%progbits,1
 663              		.align	2
 664              	.LC4:
 665 0000 52756E46 		.ascii	"RunFirstTask\012\000"
 665      69727374 
 665      5461736B 
 665      0A00
 666 000e 0000     		.space	2
 667              	.LC5:
 668 0010 43757272 		.ascii	"Current SP: %lx\012\000"
 668      656E7420 
 668      53503A20 
 668      256C780A 
 668      00
 669 0021 000000   		.space	3
 670              	.LC6:
 671 0024 4C6F6164 		.ascii	"Load Context Returned\012\000"
 671      20436F6E 
 671      74657874 
 671      20526574 
 671      75726E65 
 672              		.section	.rodata.switchTaskTo.str1.4,"aMS",%progbits,1
 673              		.align	2
 674              	.LC2:
 675 0000 436F6E74 		.ascii	"ContextSwitcher\012\000"
 675      65787453 
 675      77697463 
 675      6865720A 
 675      00
 676 0011 000000   		.space	3
 677              	.LC3:
 678 0014 4C6F6164 		.ascii	"LoadContext\012\000"
 678      436F6E74 
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 16


 678      6578740A 
 678      00
 679              		.section	.rodata.task_sysTickHandler.str1.4,"aMS",%progbits,1
 680              		.align	2
 681              	.LC7:
 682 0000 5461736B 		.ascii	"Task_Systick\012\000"
 682      5F537973 
 682      7469636B 
 682      0A00
 683 000e 0000     		.space	2
 684              	.LC8:
 685 0010 43757272 		.ascii	"Current LR: %lx\012\000"
 685      656E7420 
 685      4C523A20 
 685      256C780A 
 685      00
 686 0021 000000   		.space	3
 687              	.LC9:
 688 0024 5461736B 		.ascii	"Task_Systick_HasSleeping\012\000"
 688      5F537973 
 688      7469636B 
 688      5F486173 
 688      536C6565 
 689 003e 0000     		.space	2
 690              	.LC10:
 691 0040 5461736B 		.ascii	"Task_SystickHandler_NeedResched\012\000"
 691      5F537973 
 691      7469636B 
 691      48616E64 
 691      6C65725F 
 692              		.text
 693              	.Letext0:
 694              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 695              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 696              		.file 4 "Inc/task_cpu.h"
 697              		.file 5 "Inc/task.h"
 698              		.file 6 "Drivers/CMSIS/Include/core_cm3.h"
 699              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 700              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 701              		.file 9 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 702              		.file 10 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 703              		.file 11 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 704              		.file 12 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 705              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 706              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 707              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 708              		.file 16 "Inc/debug.h"
 709              		.file 17 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 task.c
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:16     .text.initTask:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:23     .text.initTask:00000000 initTask
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:51     .text.createTask:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:58     .text.createTask:00000000 createTask
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:215    .text.createTask:000000d0 $d
                            *COM*:00000140 tcb
                            *COM*:00001001 stackFrame
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:223    .text.delTask:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:230    .text.delTask:00000000 delTask
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:244    .text.taskDelay:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:251    .text.taskDelay:00000000 taskDelay
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:290    .text.taskDelay:00000020 $d
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:296    .text.getNextReady:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:303    .text.getNextReady:00000000 getNextReady
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:353    .text.getNextReady:00000030 $d
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:359    .text.switchTaskTo:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:366    .text.switchTaskTo:00000000 switchTaskTo
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:438    .text.switchTaskTo:00000054 $d
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:447    .text.runFirstTask:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:454    .text.runFirstTask:00000000 runFirstTask
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:527    .text.runFirstTask:00000058 $d
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:539    .text.task_sysTickHandler:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:546    .text.task_sysTickHandler:00000000 task_sysTickHandler
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:637    .text.task_sysTickHandler:00000068 $d
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:654    .data.currentTask:00000000 currentTask
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:650    .data.currentTask:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:657    .rodata.createTask.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:663    .rodata.runFirstTask.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:673    .rodata.switchTaskTo.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc0CHDi7.s:680    .rodata.task_sysTickHandler.str1.4:00000000 $d

UNDEFINED SYMBOLS
enterCritical
printf
exitCritical
saveContext
logger
contextSwitcher
loadContext
huart1
getCurrentStackPtr
