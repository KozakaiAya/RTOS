ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"task.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.initTask,"ax",%progbits
  16              		.align	1
  17              		.global	initTask
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	initTask:
  24              	.LFB66:
  25              		.file 1 "Src/task.c"
   1:Src/task.c    **** #include "task.h"
   2:Src/task.c    **** 
   3:Src/task.c    **** #include "debug.h"
   4:Src/task.c    **** #include <stdio.h>
   5:Src/task.c    **** 
   6:Src/task.c    **** 
   7:Src/task.c    **** task_control_block_t tcb[MAX_TASK_COUNT];
   8:Src/task.c    **** 
   9:Src/task.c    **** char stackFrame[TASK_STACK_SIZE];
  10:Src/task.c    **** 
  11:Src/task.c    **** uint32_t currentTask = -1;
  12:Src/task.c    **** 
  13:Src/task.c    **** int initTask()
  14:Src/task.c    **** {
  26              		.loc 1 14 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  15:Src/task.c    ****     int i;
  16:Src/task.c    ****     for (i = 0;i < MAX_TASK_COUNT; i++)
  32              		.loc 1 16 0
  33 0000 0023     		movs	r3, #0
  34 0002 00E0     		b	.L2
  35              	.LVL1:
  36              	.L3:
  37              		.loc 1 16 0 is_stmt 0 discriminator 3
  38 0004 0133     		adds	r3, r3, #1
  39              	.LVL2:
  40              	.L2:
  41              		.loc 1 16 0 discriminator 1
  42 0006 0F2B     		cmp	r3, #15
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 2


  43 0008 FCDD     		ble	.L3
  17:Src/task.c    ****     {
  18:Src/task.c    ****         tcb[i].state == TASK_FREE;
  19:Src/task.c    ****     }
  20:Src/task.c    ****     return 0;
  21:Src/task.c    **** }
  44              		.loc 1 21 0 is_stmt 1
  45 000a 0020     		movs	r0, #0
  46 000c 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE66:
  50              		.section	.text.createTask,"ax",%progbits
  51              		.align	1
  52              		.global	createTask
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  56              		.fpu softvfp
  58              	createTask:
  59              	.LFB67:
  22:Src/task.c    **** 
  23:Src/task.c    **** int createTask( void* (*foo)(void*))
  24:Src/task.c    **** {
  60              		.loc 1 24 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL3:
  65 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  66              	.LCFI0:
  67              		.cfi_def_cfa_offset 32
  68              		.cfi_offset 4, -32
  69              		.cfi_offset 5, -28
  70              		.cfi_offset 6, -24
  71              		.cfi_offset 7, -20
  72              		.cfi_offset 8, -16
  73              		.cfi_offset 9, -12
  74              		.cfi_offset 10, -8
  75              		.cfi_offset 14, -4
  76 0004 0646     		mov	r6, r0
  25:Src/task.c    ****     hw_stack_frame_t* hw_process_frame;
  26:Src/task.c    ****     sw_stack_frame_t* sw_process_frame;
  27:Src/task.c    ****     int i, j;
  28:Src/task.c    **** 
  29:Src/task.c    ****     enterCritical();
  77              		.loc 1 29 0
  78 0006 FFF7FEFF 		bl	enterCritical
  79              	.LVL4:
  30:Src/task.c    ****     for (i = 0; i < MAX_TASK_COUNT; i++)
  80              		.loc 1 30 0
  81 000a 0024     		movs	r4, #0
  82              	.LVL5:
  83              	.L5:
  84              		.loc 1 30 0 is_stmt 0 discriminator 1
  85 000c 0F2C     		cmp	r4, #15
  86 000e 47DC     		bgt	.L7
  31:Src/task.c    ****     {
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 3


  32:Src/task.c    ****         if (tcb[i].state == TASK_FREE)
  87              		.loc 1 32 0 is_stmt 1
  88 0010 04EB8403 		add	r3, r4, r4, lsl #2
  89 0014 9A00     		lsls	r2, r3, #2
  90 0016 2C4B     		ldr	r3, .L13
  91 0018 1344     		add	r3, r3, r2
  92 001a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
  93 001c 0BB1     		cbz	r3, .L11
  30:Src/task.c    ****     for (i = 0; i < MAX_TASK_COUNT; i++)
  94              		.loc 1 30 0 discriminator 2
  95 001e 0134     		adds	r4, r4, #1
  96              	.LVL6:
  97 0020 F4E7     		b	.L5
  98              	.L11:
  33:Src/task.c    ****         {
  34:Src/task.c    ****             tcb[i].sp = (char*)((stackFrame + (TASK_STACK_SIZE) - 1 - i * STACK_FRAME_SIZE) - sizeo
  99              		.loc 1 34 0
 100 0022 2202     		lsls	r2, r4, #8
 101 0024 C2F57E62 		rsb	r2, r2, #4064
 102 0028 284B     		ldr	r3, .L13+4
 103 002a 1A44     		add	r2, r2, r3
 104 002c DFF89880 		ldr	r8, .L13
 105 0030 A300     		lsls	r3, r4, #2
 106 0032 2344     		add	r3, r3, r4
 107 0034 9F00     		lsls	r7, r3, #2
 108 0036 08EB0709 		add	r9, r8, r7
 109 003a 48F80720 		str	r2, [r8, r7]
  35:Src/task.c    ****             printf("Task %d init, SP = %lx\n", i, tcb[i].sp);
 110              		.loc 1 35 0
 111 003e DFF894A0 		ldr	r10, .L13+12
 112 0042 2146     		mov	r1, r4
 113 0044 5046     		mov	r0, r10
 114 0046 FFF7FEFF 		bl	printf
 115              	.LVL7:
  36:Src/task.c    ****             hw_process_frame = (hw_stack_frame_t*)tcb[i].sp;
 116              		.loc 1 36 0
 117 004a 58F80730 		ldr	r3, [r8, r7]
 118              	.LVL8:
  37:Src/task.c    ****             hw_process_frame->r0 = 0;
 119              		.loc 1 37 0
 120 004e 0025     		movs	r5, #0
 121 0050 1D60     		str	r5, [r3]
  38:Src/task.c    ****             hw_process_frame->r1 = 0;
 122              		.loc 1 38 0
 123 0052 5D60     		str	r5, [r3, #4]
  39:Src/task.c    ****             hw_process_frame->r2 = 0;
 124              		.loc 1 39 0
 125 0054 9D60     		str	r5, [r3, #8]
  40:Src/task.c    ****             hw_process_frame->r3 = 0;
 126              		.loc 1 40 0
 127 0056 DD60     		str	r5, [r3, #12]
  41:Src/task.c    ****             hw_process_frame->r12 = 0;
 128              		.loc 1 41 0
 129 0058 1D61     		str	r5, [r3, #16]
  42:Src/task.c    ****             hw_process_frame->lr = RETURN_THREAD_MODE_EXEC_PSP;
 130              		.loc 1 42 0
 131 005a 6FF00202 		mvn	r2, #2
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 4


 132 005e 5A61     		str	r2, [r3, #20]
  43:Src/task.c    ****             hw_process_frame->pc = (uint32_t)foo & TASK_PC_MASK;
 133              		.loc 1 43 0
 134 0060 26F00106 		bic	r6, r6, #1
 135              	.LVL9:
 136 0064 9E61     		str	r6, [r3, #24]
  44:Src/task.c    ****             hw_process_frame->psr = PSR_INIT;
 137              		.loc 1 44 0
 138 0066 4FF00452 		mov	r2, #553648128
 139 006a DA61     		str	r2, [r3, #28]
  45:Src/task.c    **** 
  46:Src/task.c    ****             tcb[i].sp = (char*)((uint32_t)tcb[i].sp - sizeof(sw_stack_frame_t));
 140              		.loc 1 46 0
 141 006c 58F80720 		ldr	r2, [r8, r7]
 142 0070 203A     		subs	r2, r2, #32
 143 0072 48F80720 		str	r2, [r8, r7]
  47:Src/task.c    ****             printf("Task %d init, SP = %lx\n", i, tcb[i].sp);
 144              		.loc 1 47 0
 145 0076 2146     		mov	r1, r4
 146 0078 5046     		mov	r0, r10
 147 007a FFF7FEFF 		bl	printf
 148              	.LVL10:
  48:Src/task.c    ****             sw_process_frame = (sw_stack_frame_t*)tcb[i].sp;
 149              		.loc 1 48 0
 150 007e 58F80730 		ldr	r3, [r8, r7]
 151              	.LVL11:
  49:Src/task.c    ****             sw_process_frame->r4 = 0;
 152              		.loc 1 49 0
 153 0082 1D60     		str	r5, [r3]
  50:Src/task.c    ****             sw_process_frame->r5 = 0;
 154              		.loc 1 50 0
 155 0084 5D60     		str	r5, [r3, #4]
  51:Src/task.c    ****             sw_process_frame->r6 = 0;
 156              		.loc 1 51 0
 157 0086 9D60     		str	r5, [r3, #8]
  52:Src/task.c    ****             sw_process_frame->r7 = 0;
 158              		.loc 1 52 0
 159 0088 DD60     		str	r5, [r3, #12]
  53:Src/task.c    ****             sw_process_frame->r8 = 0;
 160              		.loc 1 53 0
 161 008a 1D61     		str	r5, [r3, #16]
  54:Src/task.c    ****             sw_process_frame->r9 = 0;
 162              		.loc 1 54 0
 163 008c 5D61     		str	r5, [r3, #20]
  55:Src/task.c    ****             sw_process_frame->r10 = 0;
 164              		.loc 1 55 0
 165 008e 9D61     		str	r5, [r3, #24]
  56:Src/task.c    ****             sw_process_frame->r11 = 0;
 166              		.loc 1 56 0
 167 0090 DD61     		str	r5, [r3, #28]
  57:Src/task.c    **** 
  58:Src/task.c    ****             tcb[i].state = TASK_READY;
 168              		.loc 1 58 0
 169 0092 0123     		movs	r3, #1
 170              	.LVL12:
 171 0094 89F81030 		strb	r3, [r9, #16]
  59:Src/task.c    ****             tcb[i].delay = 0;
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 5


 172              		.loc 1 59 0
 173 0098 C9F80C50 		str	r5, [r9, #12]
  60:Src/task.c    ****             tcb[i].priority = 0;
 174              		.loc 1 60 0
 175 009c C9F80850 		str	r5, [r9, #8]
 176              	.L7:
  61:Src/task.c    ****             break;
  62:Src/task.c    ****         }
  63:Src/task.c    ****     }
  64:Src/task.c    ****     exitCritical();
 177              		.loc 1 64 0
 178 00a0 FFF7FEFF 		bl	exitCritical
 179              	.LVL13:
  65:Src/task.c    **** 
  66:Src/task.c    ****     printf("Created Task %d\tSP: %lx\n", i, (uint32_t)tcb[i].sp);
 180              		.loc 1 66 0
 181 00a4 04EB8402 		add	r2, r4, r4, lsl #2
 182 00a8 9300     		lsls	r3, r2, #2
 183 00aa 074A     		ldr	r2, .L13
 184 00ac D258     		ldr	r2, [r2, r3]
 185 00ae 2146     		mov	r1, r4
 186 00b0 0748     		ldr	r0, .L13+8
 187 00b2 FFF7FEFF 		bl	printf
 188              	.LVL14:
  67:Src/task.c    ****     if (i == MAX_TASK_COUNT)
 189              		.loc 1 67 0
 190 00b6 102C     		cmp	r4, #16
 191 00b8 02D0     		beq	.L12
 192              	.LVL15:
 193              	.L4:
  68:Src/task.c    ****         return -1;
  69:Src/task.c    ****     else
  70:Src/task.c    ****         return i;
  71:Src/task.c    **** }
 194              		.loc 1 71 0
 195 00ba 2046     		mov	r0, r4
 196 00bc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 197              	.LVL16:
 198              	.L12:
  68:Src/task.c    ****         return -1;
 199              		.loc 1 68 0
 200 00c0 4FF0FF34 		mov	r4, #-1
 201              	.LVL17:
 202 00c4 F9E7     		b	.L4
 203              	.L14:
 204 00c6 00BF     		.align	2
 205              	.L13:
 206 00c8 00000000 		.word	tcb
 207 00cc 00000000 		.word	stackFrame
 208 00d0 18000000 		.word	.LC1
 209 00d4 00000000 		.word	.LC0
 210              		.cfi_endproc
 211              	.LFE67:
 213              		.section	.text.delTask,"ax",%progbits
 214              		.align	1
 215              		.global	delTask
 216              		.syntax unified
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 6


 217              		.thumb
 218              		.thumb_func
 219              		.fpu softvfp
 221              	delTask:
 222              	.LFB68:
  72:Src/task.c    **** 
  73:Src/task.c    **** int delTask()
  74:Src/task.c    **** {
 223              		.loc 1 74 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
  75:Src/task.c    ****     return 0;
  76:Src/task.c    **** }
 228              		.loc 1 76 0
 229 0000 0020     		movs	r0, #0
 230 0002 7047     		bx	lr
 231              		.cfi_endproc
 232              	.LFE68:
 234              		.section	.text.taskDelay,"ax",%progbits
 235              		.align	1
 236              		.global	taskDelay
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu softvfp
 242              	taskDelay:
 243              	.LFB69:
  77:Src/task.c    **** 
  78:Src/task.c    **** inline int taskDelay(uint32_t value)
  79:Src/task.c    **** {
 244              		.loc 1 79 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249              	.LVL18:
 250 0000 30B4     		push	{r4, r5}
 251              	.LCFI1:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 5, -4
  80:Src/task.c    ****     tcb[currentTask].delay = value;
 255              		.loc 1 80 0
 256 0002 074B     		ldr	r3, .L18
 257 0004 1C68     		ldr	r4, [r3]
 258 0006 074A     		ldr	r2, .L18+4
 259 0008 A300     		lsls	r3, r4, #2
 260 000a 1D19     		adds	r5, r3, r4
 261 000c A900     		lsls	r1, r5, #2
 262 000e 0D46     		mov	r5, r1
 263 0010 1144     		add	r1, r1, r2
 264 0012 C860     		str	r0, [r1, #12]
  81:Src/task.c    ****     tcb[currentTask].state = TASK_SLEEPING;
 265              		.loc 1 81 0
 266 0014 2A44     		add	r2, r2, r5
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 7


 267 0016 0323     		movs	r3, #3
 268 0018 1374     		strb	r3, [r2, #16]
  82:Src/task.c    ****     return 0;
  83:Src/task.c    **** }
 269              		.loc 1 83 0
 270 001a 0020     		movs	r0, #0
 271              	.LVL19:
 272 001c 30BC     		pop	{r4, r5}
 273              	.LCFI2:
 274              		.cfi_restore 5
 275              		.cfi_restore 4
 276              		.cfi_def_cfa_offset 0
 277 001e 7047     		bx	lr
 278              	.L19:
 279              		.align	2
 280              	.L18:
 281 0020 00000000 		.word	.LANCHOR0
 282 0024 00000000 		.word	tcb
 283              		.cfi_endproc
 284              	.LFE69:
 286              		.section	.text.getNextReady,"ax",%progbits
 287              		.align	1
 288              		.global	getNextReady
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu softvfp
 294              	getNextReady:
 295              	.LFB70:
  84:Src/task.c    **** 
  85:Src/task.c    **** inline int getNextReady()
  86:Src/task.c    **** {
 296              		.loc 1 86 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301              	.LVL20:
  87:Src/task.c    ****     int i, j;
  88:Src/task.c    ****     for (i = 1; i <= MAX_TASK_COUNT; i++)
 302              		.loc 1 88 0
 303 0000 0123     		movs	r3, #1
 304 0002 08E0     		b	.L21
 305              	.LVL21:
 306              	.L22:
  89:Src/task.c    ****     {
  90:Src/task.c    ****         j = currentTask + i;
  91:Src/task.c    ****         if (j >= MAX_TASK_COUNT) j-=MAX_TASK_COUNT;
  92:Src/task.c    ****         if (tcb[j].state == TASK_READY)
 307              		.loc 1 92 0
 308 0004 00EB8002 		add	r2, r0, r0, lsl #2
 309 0008 9100     		lsls	r1, r2, #2
 310 000a 094A     		ldr	r2, .L26
 311 000c 0A44     		add	r2, r2, r1
 312 000e 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 313 0010 012A     		cmp	r2, #1
 314 0012 0BD0     		beq	.L20
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 8


  88:Src/task.c    ****     {
 315              		.loc 1 88 0 discriminator 2
 316 0014 0133     		adds	r3, r3, #1
 317              	.LVL22:
 318              	.L21:
  88:Src/task.c    ****     {
 319              		.loc 1 88 0 is_stmt 0 discriminator 1
 320 0016 102B     		cmp	r3, #16
 321 0018 06DC     		bgt	.L25
  90:Src/task.c    ****         if (j >= MAX_TASK_COUNT) j-=MAX_TASK_COUNT;
 322              		.loc 1 90 0 is_stmt 1
 323 001a 064A     		ldr	r2, .L26+4
 324 001c 1068     		ldr	r0, [r2]
 325 001e 1844     		add	r0, r0, r3
 326              	.LVL23:
  91:Src/task.c    ****         if (tcb[j].state == TASK_READY)
 327              		.loc 1 91 0
 328 0020 0F28     		cmp	r0, #15
 329 0022 EFDD     		ble	.L22
  91:Src/task.c    ****         if (tcb[j].state == TASK_READY)
 330              		.loc 1 91 0 is_stmt 0 discriminator 1
 331 0024 1038     		subs	r0, r0, #16
 332              	.LVL24:
 333 0026 EDE7     		b	.L22
 334              	.LVL25:
 335              	.L25:
  93:Src/task.c    ****         {
  94:Src/task.c    ****             return j;
  95:Src/task.c    ****         }
  96:Src/task.c    ****     }
  97:Src/task.c    ****     return NO_SUCH_TASK;
 336              		.loc 1 97 0 is_stmt 1
 337 0028 4FF0FF30 		mov	r0, #-1
 338              	.L20:
  98:Src/task.c    **** }
 339              		.loc 1 98 0
 340 002c 7047     		bx	lr
 341              	.L27:
 342 002e 00BF     		.align	2
 343              	.L26:
 344 0030 00000000 		.word	tcb
 345 0034 00000000 		.word	.LANCHOR0
 346              		.cfi_endproc
 347              	.LFE70:
 349              		.section	.text.switchTaskTo,"ax",%progbits
 350              		.align	1
 351              		.global	switchTaskTo
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu softvfp
 357              	switchTaskTo:
 358              	.LFB71:
  99:Src/task.c    **** 
 100:Src/task.c    **** inline int switchTaskTo(int nextTask)
 101:Src/task.c    **** {
 359              		.loc 1 101 0
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 9


 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              	.LVL26:
 364 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 365              	.LCFI3:
 366              		.cfi_def_cfa_offset 24
 367              		.cfi_offset 3, -24
 368              		.cfi_offset 4, -20
 369              		.cfi_offset 5, -16
 370              		.cfi_offset 6, -12
 371              		.cfi_offset 7, -8
 372              		.cfi_offset 14, -4
 373 0002 0646     		mov	r6, r0
 102:Src/task.c    ****     int oldTask = currentTask;
 374              		.loc 1 102 0
 375 0004 1348     		ldr	r0, .L30
 376              	.LVL27:
 377 0006 0168     		ldr	r1, [r0]
 378              	.LVL28:
 103:Src/task.c    ****     tcb[currentTask].state = TASK_READY;
 379              		.loc 1 103 0
 380 0008 134D     		ldr	r5, .L30+4
 381 000a 8B00     		lsls	r3, r1, #2
 382 000c 5C18     		adds	r4, r3, r1
 383 000e A200     		lsls	r2, r4, #2
 384 0010 2A44     		add	r2, r2, r5
 385 0012 0124     		movs	r4, #1
 386 0014 1474     		strb	r4, [r2, #16]
 104:Src/task.c    ****     tcb[nextTask].state = TASK_RUNNING;
 387              		.loc 1 104 0
 388 0016 B400     		lsls	r4, r6, #2
 389 0018 A719     		adds	r7, r4, r6
 390 001a BA00     		lsls	r2, r7, #2
 391 001c 2A44     		add	r2, r2, r5
 392 001e 0227     		movs	r7, #2
 393 0020 1774     		strb	r7, [r2, #16]
 105:Src/task.c    ****     currentTask = nextTask;
 394              		.loc 1 105 0
 395 0022 0660     		str	r6, [r0]
 106:Src/task.c    ****     saveContext(&tcb[oldTask].sp);
 396              		.loc 1 106 0
 397 0024 0B44     		add	r3, r3, r1
 398 0026 03FA07F0 		lsl	r0, r3, r7
 399 002a 2844     		add	r0, r0, r5
 400 002c FFF7FEFF 		bl	saveContext
 401              	.LVL29:
 107:Src/task.c    ****     logger(&huart1, "ContextSwitcher\n");
 402              		.loc 1 107 0
 403 0030 0A4F     		ldr	r7, .L30+8
 404 0032 0B49     		ldr	r1, .L30+12
 405 0034 3846     		mov	r0, r7
 406 0036 FFF7FEFF 		bl	logger
 407              	.LVL30:
 108:Src/task.c    ****     contextSwitcher(tcb[nextTask].sp);
 408              		.loc 1 108 0
 409 003a 3444     		add	r4, r4, r6
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 10


 410 003c A300     		lsls	r3, r4, #2
 411 003e E858     		ldr	r0, [r5, r3]
 412 0040 FFF7FEFF 		bl	contextSwitcher
 413              	.LVL31:
 109:Src/task.c    ****     logger(&huart1, "LoadContext\n");
 414              		.loc 1 109 0
 415 0044 0749     		ldr	r1, .L30+16
 416 0046 3846     		mov	r0, r7
 417 0048 FFF7FEFF 		bl	logger
 418              	.LVL32:
 110:Src/task.c    ****     loadContext();
 419              		.loc 1 110 0
 420 004c FFF7FEFF 		bl	loadContext
 421              	.LVL33:
 111:Src/task.c    ****     return 0;
 112:Src/task.c    **** }
 422              		.loc 1 112 0
 423 0050 0020     		movs	r0, #0
 424 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 425              	.LVL34:
 426              	.L31:
 427              		.align	2
 428              	.L30:
 429 0054 00000000 		.word	.LANCHOR0
 430 0058 00000000 		.word	tcb
 431 005c 00000000 		.word	huart1
 432 0060 00000000 		.word	.LC2
 433 0064 14000000 		.word	.LC3
 434              		.cfi_endproc
 435              	.LFE71:
 437              		.section	.text.runFirstTask,"ax",%progbits
 438              		.align	1
 439              		.global	runFirstTask
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu softvfp
 445              	runFirstTask:
 446              	.LFB72:
 113:Src/task.c    **** 
 114:Src/task.c    **** inline int runFirstTask(int nextTask)
 115:Src/task.c    **** {
 447              		.loc 1 115 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              	.LVL35:
 452 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 453              	.LCFI4:
 454              		.cfi_def_cfa_offset 24
 455              		.cfi_offset 3, -24
 456              		.cfi_offset 4, -20
 457              		.cfi_offset 5, -16
 458              		.cfi_offset 6, -12
 459              		.cfi_offset 7, -8
 460              		.cfi_offset 14, -4
 461 0002 0646     		mov	r6, r0
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 11


 116:Src/task.c    ****     //char* buf[30];
 117:Src/task.c    ****     //memset(buf, 0, 30);
 118:Src/task.c    ****     logger(&huart1, "RunFirstTask\n");
 462              		.loc 1 118 0
 463 0004 144D     		ldr	r5, .L34
 464 0006 1549     		ldr	r1, .L34+4
 465 0008 2846     		mov	r0, r5
 466              	.LVL36:
 467 000a FFF7FEFF 		bl	logger
 468              	.LVL37:
 119:Src/task.c    ****     currentTask = nextTask;
 469              		.loc 1 119 0
 470 000e 144B     		ldr	r3, .L34+8
 471 0010 1E60     		str	r6, [r3]
 120:Src/task.c    ****     tcb[currentTask].state = TASK_RUNNING;
 472              		.loc 1 120 0
 473 0012 144F     		ldr	r7, .L34+12
 474 0014 B400     		lsls	r4, r6, #2
 475 0016 A219     		adds	r2, r4, r6
 476 0018 9300     		lsls	r3, r2, #2
 477 001a 3B44     		add	r3, r3, r7
 478 001c 0222     		movs	r2, #2
 479 001e 1A74     		strb	r2, [r3, #16]
 121:Src/task.c    ****     //itoa(tcb[nextTask].sp, 16);
 122:Src/task.c    ****     //logger(&huart1, buf);
 123:Src/task.c    ****     logger(&huart1, "ContextSwitcher\n");
 480              		.loc 1 123 0
 481 0020 1149     		ldr	r1, .L34+16
 482 0022 2846     		mov	r0, r5
 483 0024 FFF7FEFF 		bl	logger
 484              	.LVL38:
 124:Src/task.c    **** //    printf("Run First Task %d\tSP: %lx\n", nextTask, (uint32_t)tcb[nextTask].sp);
 125:Src/task.c    **** //    printf("Current SP: %lx\n", getCurrentStackPtr());
 126:Src/task.c    ****     contextSwitcher(tcb[nextTask].sp);
 485              		.loc 1 126 0
 486 0028 3444     		add	r4, r4, r6
 487 002a A300     		lsls	r3, r4, #2
 488 002c F858     		ldr	r0, [r7, r3]
 489 002e FFF7FEFF 		bl	contextSwitcher
 490              	.LVL39:
 127:Src/task.c    ****     printf("Current SP: %lx\n", getCurrentStackPtr());
 491              		.loc 1 127 0
 492 0032 FFF7FEFF 		bl	getCurrentStackPtr
 493              	.LVL40:
 494 0036 0146     		mov	r1, r0
 495 0038 0C48     		ldr	r0, .L34+20
 496 003a FFF7FEFF 		bl	printf
 497              	.LVL41:
 128:Src/task.c    ****     logger(&huart1, "LoadContext\n");
 498              		.loc 1 128 0
 499 003e 0C49     		ldr	r1, .L34+24
 500 0040 2846     		mov	r0, r5
 501 0042 FFF7FEFF 		bl	logger
 502              	.LVL42:
 129:Src/task.c    ****     loadContext();
 503              		.loc 1 129 0
 504 0046 FFF7FEFF 		bl	loadContext
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 12


 505              	.LVL43:
 130:Src/task.c    ****     logger(&huart1, "Load Context Returned\n");
 506              		.loc 1 130 0
 507 004a 0A49     		ldr	r1, .L34+28
 508 004c 2846     		mov	r0, r5
 509 004e FFF7FEFF 		bl	logger
 510              	.LVL44:
 131:Src/task.c    ****     return 0;
 132:Src/task.c    **** }
 511              		.loc 1 132 0
 512 0052 0020     		movs	r0, #0
 513 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 514              	.LVL45:
 515              	.L35:
 516 0056 00BF     		.align	2
 517              	.L34:
 518 0058 00000000 		.word	huart1
 519 005c 00000000 		.word	.LC4
 520 0060 00000000 		.word	.LANCHOR0
 521 0064 00000000 		.word	tcb
 522 0068 00000000 		.word	.LC2
 523 006c 10000000 		.word	.LC5
 524 0070 14000000 		.word	.LC3
 525 0074 24000000 		.word	.LC6
 526              		.cfi_endproc
 527              	.LFE72:
 529              		.section	.text.task_sysTickHandler,"ax",%progbits
 530              		.align	1
 531              		.global	task_sysTickHandler
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu softvfp
 537              	task_sysTickHandler:
 538              	.LFB73:
 133:Src/task.c    **** 
 134:Src/task.c    **** int task_sysTickHandler()
 135:Src/task.c    **** {
 539              		.loc 1 135 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543 0000 38B5     		push	{r3, r4, r5, lr}
 544              	.LCFI5:
 545              		.cfi_def_cfa_offset 16
 546              		.cfi_offset 3, -16
 547              		.cfi_offset 4, -12
 548              		.cfi_offset 5, -8
 549              		.cfi_offset 14, -4
 136:Src/task.c    ****     logger(&huart1, "Task_Systick\n");
 550              		.loc 1 136 0
 551 0002 1749     		ldr	r1, .L42
 552 0004 1748     		ldr	r0, .L42+4
 553 0006 FFF7FEFF 		bl	logger
 554              	.LVL46:
 137:Src/task.c    **** 
 138:Src/task.c    ****     int i, f;
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 13


 139:Src/task.c    ****     f = 0;
 555              		.loc 1 139 0
 556 000a 0025     		movs	r5, #0
 140:Src/task.c    ****     for (i = 0; i < MAX_TASK_COUNT; i++)
 557              		.loc 1 140 0
 558 000c 2C46     		mov	r4, r5
 559 000e 00E0     		b	.L37
 560              	.LVL47:
 561              	.L38:
 562              		.loc 1 140 0 is_stmt 0 discriminator 2
 563 0010 0134     		adds	r4, r4, #1
 564              	.LVL48:
 565              	.L37:
 566              		.loc 1 140 0 discriminator 1
 567 0012 0F2C     		cmp	r4, #15
 568 0014 21DC     		bgt	.L41
 141:Src/task.c    ****     {
 142:Src/task.c    ****         if (tcb[i].state == TASK_SLEEPING)
 569              		.loc 1 142 0 is_stmt 1
 570 0016 04EB8403 		add	r3, r4, r4, lsl #2
 571 001a 9A00     		lsls	r2, r3, #2
 572 001c 124B     		ldr	r3, .L42+8
 573 001e 1344     		add	r3, r3, r2
 574 0020 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 575 0022 032B     		cmp	r3, #3
 576 0024 F4D1     		bne	.L38
 143:Src/task.c    ****         {
 144:Src/task.c    ****             logger(&huart1, "Task_Systick_HasSleeping\n");
 577              		.loc 1 144 0
 578 0026 1149     		ldr	r1, .L42+12
 579 0028 0E48     		ldr	r0, .L42+4
 580 002a FFF7FEFF 		bl	logger
 581              	.LVL49:
 145:Src/task.c    ****             tcb[i].delay--;
 582              		.loc 1 145 0
 583 002e A300     		lsls	r3, r4, #2
 584 0030 2344     		add	r3, r3, r4
 585 0032 9900     		lsls	r1, r3, #2
 586 0034 0C4A     		ldr	r2, .L42+8
 587 0036 0A44     		add	r2, r2, r1
 588 0038 D368     		ldr	r3, [r2, #12]
 589 003a 013B     		subs	r3, r3, #1
 590 003c D360     		str	r3, [r2, #12]
 146:Src/task.c    ****             if (tcb[i].delay == 0)
 591              		.loc 1 146 0
 592 003e 002B     		cmp	r3, #0
 593 0040 E6D1     		bne	.L38
 147:Src/task.c    ****             {
 148:Src/task.c    ****                 logger(&huart1, "Task_SystickHandler_NeedResched\n");
 594              		.loc 1 148 0
 595 0042 0B49     		ldr	r1, .L42+16
 596 0044 0748     		ldr	r0, .L42+4
 597 0046 FFF7FEFF 		bl	logger
 598              	.LVL50:
 149:Src/task.c    ****                 f = 1;
 150:Src/task.c    ****                 tcb[i].state = TASK_READY;
 599              		.loc 1 150 0
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 14


 600 004a 04EB8403 		add	r3, r4, r4, lsl #2
 601 004e 9A00     		lsls	r2, r3, #2
 602 0050 054B     		ldr	r3, .L42+8
 603 0052 1344     		add	r3, r3, r2
 604 0054 0125     		movs	r5, #1
 605 0056 1D74     		strb	r5, [r3, #16]
 606 0058 DAE7     		b	.L38
 607              	.LVL51:
 608              	.L41:
 151:Src/task.c    ****             }
 152:Src/task.c    ****         }
 153:Src/task.c    ****     }
 154:Src/task.c    ****     return f;
 155:Src/task.c    **** }
 609              		.loc 1 155 0
 610 005a 2846     		mov	r0, r5
 611 005c 38BD     		pop	{r3, r4, r5, pc}
 612              	.LVL52:
 613              	.L43:
 614 005e 00BF     		.align	2
 615              	.L42:
 616 0060 00000000 		.word	.LC7
 617 0064 00000000 		.word	huart1
 618 0068 00000000 		.word	tcb
 619 006c 10000000 		.word	.LC8
 620 0070 2C000000 		.word	.LC9
 621              		.cfi_endproc
 622              	.LFE73:
 624              		.global	currentTask
 625              		.comm	stackFrame,4097,4
 626              		.comm	tcb,320,4
 627              		.section	.data.currentTask,"aw",%progbits
 628              		.align	2
 629              		.set	.LANCHOR0,. + 0
 632              	currentTask:
 633 0000 FFFFFFFF 		.word	-1
 634              		.section	.rodata.createTask.str1.4,"aMS",%progbits,1
 635              		.align	2
 636              	.LC0:
 637 0000 5461736B 		.ascii	"Task %d init, SP = %lx\012\000"
 637      20256420 
 637      696E6974 
 637      2C205350 
 637      203D2025 
 638              	.LC1:
 639 0018 43726561 		.ascii	"Created Task %d\011SP: %lx\012\000"
 639      74656420 
 639      5461736B 
 639      20256409 
 639      53503A20 
 640              		.section	.rodata.runFirstTask.str1.4,"aMS",%progbits,1
 641              		.align	2
 642              	.LC4:
 643 0000 52756E46 		.ascii	"RunFirstTask\012\000"
 643      69727374 
 643      5461736B 
 643      0A00
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 15


 644 000e 0000     		.space	2
 645              	.LC5:
 646 0010 43757272 		.ascii	"Current SP: %lx\012\000"
 646      656E7420 
 646      53503A20 
 646      256C780A 
 646      00
 647 0021 000000   		.space	3
 648              	.LC6:
 649 0024 4C6F6164 		.ascii	"Load Context Returned\012\000"
 649      20436F6E 
 649      74657874 
 649      20526574 
 649      75726E65 
 650              		.section	.rodata.switchTaskTo.str1.4,"aMS",%progbits,1
 651              		.align	2
 652              	.LC2:
 653 0000 436F6E74 		.ascii	"ContextSwitcher\012\000"
 653      65787453 
 653      77697463 
 653      6865720A 
 653      00
 654 0011 000000   		.space	3
 655              	.LC3:
 656 0014 4C6F6164 		.ascii	"LoadContext\012\000"
 656      436F6E74 
 656      6578740A 
 656      00
 657              		.section	.rodata.task_sysTickHandler.str1.4,"aMS",%progbits,1
 658              		.align	2
 659              	.LC7:
 660 0000 5461736B 		.ascii	"Task_Systick\012\000"
 660      5F537973 
 660      7469636B 
 660      0A00
 661 000e 0000     		.space	2
 662              	.LC8:
 663 0010 5461736B 		.ascii	"Task_Systick_HasSleeping\012\000"
 663      5F537973 
 663      7469636B 
 663      5F486173 
 663      536C6565 
 664 002a 0000     		.space	2
 665              	.LC9:
 666 002c 5461736B 		.ascii	"Task_SystickHandler_NeedResched\012\000"
 666      5F537973 
 666      7469636B 
 666      48616E64 
 666      6C65725F 
 667              		.text
 668              	.Letext0:
 669              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 670              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 671              		.file 4 "Inc/task_cpu.h"
 672              		.file 5 "Inc/task.h"
 673              		.file 6 "Drivers/CMSIS/Include/core_cm3.h"
 674              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 16


 675              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 676              		.file 9 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 677              		.file 10 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 678              		.file 11 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 679              		.file 12 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 680              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 681              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 682              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 683              		.file 16 "Inc/debug.h"
 684              		.file 17 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 task.c
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:16     .text.initTask:00000000 $t
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:23     .text.initTask:00000000 initTask
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:51     .text.createTask:00000000 $t
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:58     .text.createTask:00000000 createTask
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:206    .text.createTask:000000c8 $d
                            *COM*:00000140 tcb
                            *COM*:00001001 stackFrame
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:214    .text.delTask:00000000 $t
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:221    .text.delTask:00000000 delTask
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:235    .text.taskDelay:00000000 $t
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:242    .text.taskDelay:00000000 taskDelay
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:281    .text.taskDelay:00000020 $d
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:287    .text.getNextReady:00000000 $t
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:294    .text.getNextReady:00000000 getNextReady
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:344    .text.getNextReady:00000030 $d
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:350    .text.switchTaskTo:00000000 $t
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:357    .text.switchTaskTo:00000000 switchTaskTo
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:429    .text.switchTaskTo:00000054 $d
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:438    .text.runFirstTask:00000000 $t
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:445    .text.runFirstTask:00000000 runFirstTask
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:518    .text.runFirstTask:00000058 $d
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:530    .text.task_sysTickHandler:00000000 $t
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:537    .text.task_sysTickHandler:00000000 task_sysTickHandler
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:616    .text.task_sysTickHandler:00000060 $d
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:632    .data.currentTask:00000000 currentTask
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:628    .data.currentTask:00000000 $d
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:635    .rodata.createTask.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:641    .rodata.runFirstTask.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:651    .rodata.switchTaskTo.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\ccUvuSMf.s:658    .rodata.task_sysTickHandler.str1.4:00000000 $d

UNDEFINED SYMBOLS
enterCritical
printf
exitCritical
saveContext
logger
contextSwitcher
loadContext
huart1
getCurrentStackPtr
