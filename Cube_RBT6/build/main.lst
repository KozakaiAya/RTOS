ARM GAS  /tmp/ccaUBPKj.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.taskA,"ax",%progbits
  16              		.align	1
  17              		.global	taskA
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	taskA:
  24              	.LFB66:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccaUBPKj.s 			page 2


  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f1xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** #include <stdio.h>
  45:Src/main.c    **** #include "os.h"
  46:Src/main.c    **** #include "debug.h"
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** UART_HandleTypeDef huart1;
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** static void MX_GPIO_Init(void);
  60:Src/main.c    **** static void MX_USART1_UART_Init(void);
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** #ifdef __GNUC__
  65:Src/main.c    ****   /* With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
  66:Src/main.c    ****      set to 'Yes') calls __io_putchar() */
  67:Src/main.c    ****   #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  68:Src/main.c    **** #else
  69:Src/main.c    ****   #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
  70:Src/main.c    **** #endif /* __GNUC__ */
  71:Src/main.c    **** /* USER CODE END PFP */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE BEGIN 0 */
  74:Src/main.c    **** void* taskA()
  75:Src/main.c    **** {
  26              		.loc 1 75 0
  27              		.cfi_startproc
  28              		@ Volatile: function does not return.
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  36              	.L2:
  76:Src/main.c    ****   //logger(&huart1, "Task1_Run\n");
  77:Src/main.c    **** 	for (;;) {
  78:Src/main.c    **** 		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
  37              		.loc 1 78 0 discriminator 1
ARM GAS  /tmp/ccaUBPKj.s 			page 3


  38 0002 074C     		ldr	r4, .L4
  39 0004 0022     		movs	r2, #0
  40 0006 0221     		movs	r1, #2
  41 0008 2046     		mov	r0, r4
  42 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  43              	.LVL0:
  79:Src/main.c    **** 		os_setTaskDelay(13);
  44              		.loc 1 79 0 discriminator 1
  45 000e 0D20     		movs	r0, #13
  46 0010 FFF7FEFF 		bl	os_setTaskDelay
  47              	.LVL1:
  80:Src/main.c    **** 		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
  48              		.loc 1 80 0 discriminator 1
  49 0014 0122     		movs	r2, #1
  50 0016 0221     		movs	r1, #2
  51 0018 2046     		mov	r0, r4
  52 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  53              	.LVL2:
  54 001e F0E7     		b	.L2
  55              	.L5:
  56              		.align	2
  57              	.L4:
  58 0020 00080140 		.word	1073809408
  59              		.cfi_endproc
  60              	.LFE66:
  62              		.section	.text.taskB,"ax",%progbits
  63              		.align	1
  64              		.global	taskB
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu softvfp
  70              	taskB:
  71              	.LFB67:
  81:Src/main.c    **** 	}
  82:Src/main.c    **** }
  83:Src/main.c    **** 
  84:Src/main.c    **** void* taskB()
  85:Src/main.c    **** {
  72              		.loc 1 85 0
  73              		.cfi_startproc
  74              		@ Volatile: function does not return.
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77 0000 08B5     		push	{r3, lr}
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
  82              	.L7:
  86:Src/main.c    ****   //logger(&huart1, "Task2_Run\n");
  87:Src/main.c    **** 	for (;;) {
  88:Src/main.c    **** 		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
  83              		.loc 1 88 0 discriminator 1
  84 0002 074C     		ldr	r4, .L9
  85 0004 0022     		movs	r2, #0
  86 0006 0421     		movs	r1, #4
ARM GAS  /tmp/ccaUBPKj.s 			page 4


  87 0008 2046     		mov	r0, r4
  88 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  89              	.LVL3:
  89:Src/main.c    **** 		os_setTaskDelay(23);
  90              		.loc 1 89 0 discriminator 1
  91 000e 1720     		movs	r0, #23
  92 0010 FFF7FEFF 		bl	os_setTaskDelay
  93              	.LVL4:
  90:Src/main.c    **** 		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
  94              		.loc 1 90 0 discriminator 1
  95 0014 0122     		movs	r2, #1
  96 0016 0421     		movs	r1, #4
  97 0018 2046     		mov	r0, r4
  98 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL5:
 100 001e F0E7     		b	.L7
 101              	.L10:
 102              		.align	2
 103              	.L9:
 104 0020 00080140 		.word	1073809408
 105              		.cfi_endproc
 106              	.LFE67:
 108              		.section	.text.MX_GPIO_Init,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu softvfp
 115              	MX_GPIO_Init:
 116              	.LFB71:
  91:Src/main.c    **** 	}
  92:Src/main.c    **** }
  93:Src/main.c    **** /* USER CODE END 0 */
  94:Src/main.c    **** 
  95:Src/main.c    **** /**
  96:Src/main.c    ****   * @brief  The application entry point.
  97:Src/main.c    ****   *
  98:Src/main.c    ****   * @retval None
  99:Src/main.c    ****   */
 100:Src/main.c    **** int main(void)
 101:Src/main.c    **** {
 102:Src/main.c    ****   /* USER CODE BEGIN 1 */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE END 1 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 109:Src/main.c    ****   HAL_Init();
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE BEGIN Init */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE END Init */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Configure the system clock */
 116:Src/main.c    ****   SystemClock_Config();
 117:Src/main.c    **** 
ARM GAS  /tmp/ccaUBPKj.s 			page 5


 118:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE END SysInit */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Initialize all configured peripherals */
 123:Src/main.c    ****   MX_GPIO_Init();
 124:Src/main.c    ****   MX_USART1_UART_Init();
 125:Src/main.c    ****   /* USER CODE BEGIN 2 */
 126:Src/main.c    ****   //HAL_Delay(5000);
 127:Src/main.c    ****   //logger(&huart1, "HW\n");
 128:Src/main.c    ****   //printf("fuck\n");
 129:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 130:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 131:Src/main.c    **** 
 132:Src/main.c    ****   os_enterCritical();
 133:Src/main.c    ****   os_pre();
 134:Src/main.c    ****   os_createTask(taskA);
 135:Src/main.c    ****   os_createTask(taskB);
 136:Src/main.c    ****   osStart();
 137:Src/main.c    ****   /* USER CODE END 2 */
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* Infinite loop */
 140:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 141:Src/main.c    ****   while (1)
 142:Src/main.c    ****   {
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* USER CODE END WHILE */
 145:Src/main.c    **** 
 146:Src/main.c    ****   /* USER CODE BEGIN 3 */
 147:Src/main.c    **** 
 148:Src/main.c    ****   }
 149:Src/main.c    ****   /* USER CODE END 3 */
 150:Src/main.c    **** 
 151:Src/main.c    **** }
 152:Src/main.c    **** 
 153:Src/main.c    **** /**
 154:Src/main.c    ****   * @brief System Clock Configuration
 155:Src/main.c    ****   * @retval None
 156:Src/main.c    ****   */
 157:Src/main.c    **** void SystemClock_Config(void)
 158:Src/main.c    **** {
 159:Src/main.c    **** 
 160:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 161:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 162:Src/main.c    **** 
 163:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 164:Src/main.c    ****     */
 165:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 166:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 167:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 169:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 170:Src/main.c    ****   {
 171:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 172:Src/main.c    ****   }
 173:Src/main.c    **** 
 174:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/ccaUBPKj.s 			page 6


 175:Src/main.c    ****     */
 176:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 177:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 178:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 179:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 180:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 181:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 182:Src/main.c    **** 
 183:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 184:Src/main.c    ****   {
 185:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 186:Src/main.c    ****   }
 187:Src/main.c    **** 
 188:Src/main.c    ****     /**Configure the Systick interrupt time 
 189:Src/main.c    ****     */
 190:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 191:Src/main.c    **** 
 192:Src/main.c    ****     /**Configure the Systick 
 193:Src/main.c    ****     */
 194:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 195:Src/main.c    **** 
 196:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 197:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 198:Src/main.c    **** }
 199:Src/main.c    **** 
 200:Src/main.c    **** /* USART1 init function */
 201:Src/main.c    **** static void MX_USART1_UART_Init(void)
 202:Src/main.c    **** {
 203:Src/main.c    **** 
 204:Src/main.c    ****   huart1.Instance = USART1;
 205:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 206:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 207:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 208:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 209:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 210:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 211:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 212:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 213:Src/main.c    ****   {
 214:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 215:Src/main.c    ****   }
 216:Src/main.c    **** 
 217:Src/main.c    **** }
 218:Src/main.c    **** 
 219:Src/main.c    **** /** Configure pins as 
 220:Src/main.c    ****         * Analog 
 221:Src/main.c    ****         * Input 
 222:Src/main.c    ****         * Output
 223:Src/main.c    ****         * EVENT_OUT
 224:Src/main.c    ****         * EXTI
 225:Src/main.c    **** */
 226:Src/main.c    **** static void MX_GPIO_Init(void)
 227:Src/main.c    **** {
 117              		.loc 1 227 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 24
 120              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccaUBPKj.s 			page 7


 121 0000 10B5     		push	{r4, lr}
 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
 126 0002 86B0     		sub	sp, sp, #24
 127              	.LCFI3:
 128              		.cfi_def_cfa_offset 32
 129              	.LBB2:
 228:Src/main.c    **** 
 229:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 230:Src/main.c    **** 
 231:Src/main.c    ****   /* GPIO Ports Clock Enable */
 232:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 130              		.loc 1 232 0
 131 0004 0D4B     		ldr	r3, .L13
 132 0006 9A69     		ldr	r2, [r3, #24]
 133 0008 42F00402 		orr	r2, r2, #4
 134 000c 9A61     		str	r2, [r3, #24]
 135 000e 9B69     		ldr	r3, [r3, #24]
 136 0010 03F00403 		and	r3, r3, #4
 137 0014 0193     		str	r3, [sp, #4]
 138 0016 019B     		ldr	r3, [sp, #4]
 139              	.LBE2:
 233:Src/main.c    **** 
 234:Src/main.c    ****   /*Configure GPIO pin Output Level */
 235:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1|GPIO_PIN_2, GPIO_PIN_RESET);
 140              		.loc 1 235 0
 141 0018 094C     		ldr	r4, .L13+4
 142 001a 0022     		movs	r2, #0
 143 001c 0621     		movs	r1, #6
 144 001e 2046     		mov	r0, r4
 145 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 146              	.LVL6:
 236:Src/main.c    **** 
 237:Src/main.c    ****   /*Configure GPIO pins : PA1 PA2 */
 238:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2;
 147              		.loc 1 238 0
 148 0024 0623     		movs	r3, #6
 149 0026 0293     		str	r3, [sp, #8]
 239:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 150              		.loc 1 239 0
 151 0028 0123     		movs	r3, #1
 152 002a 0393     		str	r3, [sp, #12]
 240:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 153              		.loc 1 240 0
 154 002c 0223     		movs	r3, #2
 155 002e 0593     		str	r3, [sp, #20]
 241:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 156              		.loc 1 241 0
 157 0030 02A9     		add	r1, sp, #8
 158 0032 2046     		mov	r0, r4
 159 0034 FFF7FEFF 		bl	HAL_GPIO_Init
 160              	.LVL7:
 242:Src/main.c    **** 
 243:Src/main.c    **** }
 161              		.loc 1 243 0
ARM GAS  /tmp/ccaUBPKj.s 			page 8


 162 0038 06B0     		add	sp, sp, #24
 163              	.LCFI4:
 164              		.cfi_def_cfa_offset 8
 165              		@ sp needed
 166 003a 10BD     		pop	{r4, pc}
 167              	.L14:
 168              		.align	2
 169              	.L13:
 170 003c 00100240 		.word	1073876992
 171 0040 00080140 		.word	1073809408
 172              		.cfi_endproc
 173              	.LFE71:
 175              		.section	.text.__io_putchar,"ax",%progbits
 176              		.align	1
 177              		.global	__io_putchar
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu softvfp
 183              	__io_putchar:
 184              	.LFB72:
 244:Src/main.c    **** 
 245:Src/main.c    **** /* USER CODE BEGIN 4 */
 246:Src/main.c    **** /**
 247:Src/main.c    ****   * @brief  Retargets the C library printf function to the USART.
 248:Src/main.c    ****   * @param  None
 249:Src/main.c    ****   * @retval None
 250:Src/main.c    ****   */
 251:Src/main.c    **** PUTCHAR_PROTOTYPE
 252:Src/main.c    **** {
 185              		.loc 1 252 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 8
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              	.LVL8:
 190 0000 00B5     		push	{lr}
 191              	.LCFI5:
 192              		.cfi_def_cfa_offset 4
 193              		.cfi_offset 14, -4
 194 0002 83B0     		sub	sp, sp, #12
 195              	.LCFI6:
 196              		.cfi_def_cfa_offset 16
 197 0004 02A9     		add	r1, sp, #8
 198 0006 41F8040D 		str	r0, [r1, #-4]!
 253:Src/main.c    ****   /* Place your implementation of fputc here 执行*/
 254:Src/main.c    ****   /* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */
 255:Src/main.c    ****   HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 199              		.loc 1 255 0
 200 000a 4FF6FF73 		movw	r3, #65535
 201 000e 0122     		movs	r2, #1
 202 0010 0348     		ldr	r0, .L17
 203              	.LVL9:
 204 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 205              	.LVL10:
 256:Src/main.c    **** 
 257:Src/main.c    ****   return ch;
 258:Src/main.c    **** }
ARM GAS  /tmp/ccaUBPKj.s 			page 9


 206              		.loc 1 258 0
 207 0016 0198     		ldr	r0, [sp, #4]
 208 0018 03B0     		add	sp, sp, #12
 209              	.LCFI7:
 210              		.cfi_def_cfa_offset 4
 211              		@ sp needed
 212 001a 5DF804FB 		ldr	pc, [sp], #4
 213              	.L18:
 214 001e 00BF     		.align	2
 215              	.L17:
 216 0020 00000000 		.word	huart1
 217              		.cfi_endproc
 218              	.LFE72:
 220              		.section	.text._Error_Handler,"ax",%progbits
 221              		.align	1
 222              		.global	_Error_Handler
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu softvfp
 228              	_Error_Handler:
 229              	.LFB73:
 259:Src/main.c    **** /* USER CODE END 4 */
 260:Src/main.c    **** 
 261:Src/main.c    **** /**
 262:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 263:Src/main.c    ****   * @param  file: The file name as string.
 264:Src/main.c    ****   * @param  line: The line in file as a number.
 265:Src/main.c    ****   * @retval None
 266:Src/main.c    ****   */
 267:Src/main.c    **** void _Error_Handler(char *file, int line)
 268:Src/main.c    **** {
 230              		.loc 1 268 0
 231              		.cfi_startproc
 232              		@ Volatile: function does not return.
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL11:
 237              	.L20:
 238 0000 FEE7     		b	.L20
 239              		.cfi_endproc
 240              	.LFE73:
 242              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 243              		.align	1
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu softvfp
 249              	MX_USART1_UART_Init:
 250              	.LFB70:
 202:Src/main.c    **** 
 251              		.loc 1 202 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 202:Src/main.c    **** 
ARM GAS  /tmp/ccaUBPKj.s 			page 10


 255              		.loc 1 202 0
 256 0000 08B5     		push	{r3, lr}
 257              	.LCFI8:
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 3, -8
 260              		.cfi_offset 14, -4
 204:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 261              		.loc 1 204 0
 262 0002 0B48     		ldr	r0, .L25
 263 0004 0B4B     		ldr	r3, .L25+4
 264 0006 0360     		str	r3, [r0]
 205:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 265              		.loc 1 205 0
 266 0008 4FF4E133 		mov	r3, #115200
 267 000c 4360     		str	r3, [r0, #4]
 206:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 268              		.loc 1 206 0
 269 000e 0023     		movs	r3, #0
 270 0010 8360     		str	r3, [r0, #8]
 207:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 271              		.loc 1 207 0
 272 0012 C360     		str	r3, [r0, #12]
 208:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 273              		.loc 1 208 0
 274 0014 0361     		str	r3, [r0, #16]
 209:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 275              		.loc 1 209 0
 276 0016 0C22     		movs	r2, #12
 277 0018 4261     		str	r2, [r0, #20]
 210:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 278              		.loc 1 210 0
 279 001a 8361     		str	r3, [r0, #24]
 211:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 280              		.loc 1 211 0
 281 001c C361     		str	r3, [r0, #28]
 212:Src/main.c    ****   {
 282              		.loc 1 212 0
 283 001e FFF7FEFF 		bl	HAL_UART_Init
 284              	.LVL12:
 285 0022 00B9     		cbnz	r0, .L24
 217:Src/main.c    **** 
 286              		.loc 1 217 0
 287 0024 08BD     		pop	{r3, pc}
 288              	.L24:
 214:Src/main.c    ****   }
 289              		.loc 1 214 0
 290 0026 D621     		movs	r1, #214
 291 0028 0348     		ldr	r0, .L25+8
 292 002a FFF7FEFF 		bl	_Error_Handler
 293              	.LVL13:
 294              	.L26:
 295 002e 00BF     		.align	2
 296              	.L25:
 297 0030 00000000 		.word	huart1
 298 0034 00380140 		.word	1073821696
 299 0038 00000000 		.word	.LC0
 300              		.cfi_endproc
ARM GAS  /tmp/ccaUBPKj.s 			page 11


 301              	.LFE70:
 303              		.section	.text.SystemClock_Config,"ax",%progbits
 304              		.align	1
 305              		.global	SystemClock_Config
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu softvfp
 311              	SystemClock_Config:
 312              	.LFB69:
 158:Src/main.c    **** 
 313              		.loc 1 158 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 64
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 00B5     		push	{lr}
 318              	.LCFI9:
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 14, -4
 321 0002 91B0     		sub	sp, sp, #68
 322              	.LCFI10:
 323              		.cfi_def_cfa_offset 72
 165:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 324              		.loc 1 165 0
 325 0004 0223     		movs	r3, #2
 326 0006 0693     		str	r3, [sp, #24]
 166:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 327              		.loc 1 166 0
 328 0008 0123     		movs	r3, #1
 329 000a 0A93     		str	r3, [sp, #40]
 167:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 330              		.loc 1 167 0
 331 000c 1023     		movs	r3, #16
 332 000e 0B93     		str	r3, [sp, #44]
 168:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 333              		.loc 1 168 0
 334 0010 0023     		movs	r3, #0
 335 0012 0D93     		str	r3, [sp, #52]
 169:Src/main.c    ****   {
 336              		.loc 1 169 0
 337 0014 06A8     		add	r0, sp, #24
 338 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 339              	.LVL14:
 340 001a F0B9     		cbnz	r0, .L31
 176:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 341              		.loc 1 176 0
 342 001c 0F23     		movs	r3, #15
 343 001e 0193     		str	r3, [sp, #4]
 178:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 344              		.loc 1 178 0
 345 0020 0021     		movs	r1, #0
 346 0022 0291     		str	r1, [sp, #8]
 179:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 347              		.loc 1 179 0
 348 0024 0391     		str	r1, [sp, #12]
 180:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 349              		.loc 1 180 0
ARM GAS  /tmp/ccaUBPKj.s 			page 12


 350 0026 0491     		str	r1, [sp, #16]
 181:Src/main.c    **** 
 351              		.loc 1 181 0
 352 0028 0591     		str	r1, [sp, #20]
 183:Src/main.c    ****   {
 353              		.loc 1 183 0
 354 002a 01A8     		add	r0, sp, #4
 355 002c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 356              	.LVL15:
 357 0030 B8B9     		cbnz	r0, .L32
 190:Src/main.c    **** 
 358              		.loc 1 190 0
 359 0032 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 360              	.LVL16:
 361 0036 0D4B     		ldr	r3, .L33
 362 0038 A3FB0030 		umull	r3, r0, r3, r0
 363 003c 8009     		lsrs	r0, r0, #6
 364 003e FFF7FEFF 		bl	HAL_SYSTICK_Config
 365              	.LVL17:
 194:Src/main.c    **** 
 366              		.loc 1 194 0
 367 0042 0420     		movs	r0, #4
 368 0044 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 369              	.LVL18:
 197:Src/main.c    **** }
 370              		.loc 1 197 0
 371 0048 0022     		movs	r2, #0
 372 004a 1146     		mov	r1, r2
 373 004c 4FF0FF30 		mov	r0, #-1
 374 0050 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 375              	.LVL19:
 198:Src/main.c    **** 
 376              		.loc 1 198 0
 377 0054 11B0     		add	sp, sp, #68
 378              	.LCFI11:
 379              		.cfi_remember_state
 380              		.cfi_def_cfa_offset 4
 381              		@ sp needed
 382 0056 5DF804FB 		ldr	pc, [sp], #4
 383              	.L31:
 384              	.LCFI12:
 385              		.cfi_restore_state
 171:Src/main.c    ****   }
 386              		.loc 1 171 0
 387 005a AB21     		movs	r1, #171
 388 005c 0448     		ldr	r0, .L33+4
 389 005e FFF7FEFF 		bl	_Error_Handler
 390              	.LVL20:
 391              	.L32:
 185:Src/main.c    ****   }
 392              		.loc 1 185 0
 393 0062 B921     		movs	r1, #185
 394 0064 0248     		ldr	r0, .L33+4
 395 0066 FFF7FEFF 		bl	_Error_Handler
 396              	.LVL21:
 397              	.L34:
 398 006a 00BF     		.align	2
ARM GAS  /tmp/ccaUBPKj.s 			page 13


 399              	.L33:
 400 006c D34D6210 		.word	274877907
 401 0070 00000000 		.word	.LC0
 402              		.cfi_endproc
 403              	.LFE69:
 405              		.section	.text.main,"ax",%progbits
 406              		.align	1
 407              		.global	main
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 411              		.fpu softvfp
 413              	main:
 414              	.LFB68:
 101:Src/main.c    ****   /* USER CODE BEGIN 1 */
 415              		.loc 1 101 0
 416              		.cfi_startproc
 417              		@ Volatile: function does not return.
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 08B5     		push	{r3, lr}
 421              	.LCFI13:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
 109:Src/main.c    **** 
 425              		.loc 1 109 0
 426 0002 FFF7FEFF 		bl	HAL_Init
 427              	.LVL22:
 116:Src/main.c    **** 
 428              		.loc 1 116 0
 429 0006 FFF7FEFF 		bl	SystemClock_Config
 430              	.LVL23:
 123:Src/main.c    ****   MX_USART1_UART_Init();
 431              		.loc 1 123 0
 432 000a FFF7FEFF 		bl	MX_GPIO_Init
 433              	.LVL24:
 124:Src/main.c    ****   /* USER CODE BEGIN 2 */
 434              		.loc 1 124 0
 435 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 436              	.LVL25:
 129:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 437              		.loc 1 129 0
 438 0012 0C4C     		ldr	r4, .L38
 439 0014 0122     		movs	r2, #1
 440 0016 0221     		movs	r1, #2
 441 0018 2046     		mov	r0, r4
 442 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 443              	.LVL26:
 130:Src/main.c    **** 
 444              		.loc 1 130 0
 445 001e 0122     		movs	r2, #1
 446 0020 0421     		movs	r1, #4
 447 0022 2046     		mov	r0, r4
 448 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 449              	.LVL27:
 132:Src/main.c    ****   os_pre();
ARM GAS  /tmp/ccaUBPKj.s 			page 14


 450              		.loc 1 132 0
 451 0028 FFF7FEFF 		bl	os_enterCritical
 452              	.LVL28:
 133:Src/main.c    ****   os_createTask(taskA);
 453              		.loc 1 133 0
 454 002c FFF7FEFF 		bl	os_pre
 455              	.LVL29:
 134:Src/main.c    ****   os_createTask(taskB);
 456              		.loc 1 134 0
 457 0030 0548     		ldr	r0, .L38+4
 458 0032 FFF7FEFF 		bl	os_createTask
 459              	.LVL30:
 135:Src/main.c    ****   osStart();
 460              		.loc 1 135 0
 461 0036 0548     		ldr	r0, .L38+8
 462 0038 FFF7FEFF 		bl	os_createTask
 463              	.LVL31:
 136:Src/main.c    ****   /* USER CODE END 2 */
 464              		.loc 1 136 0
 465 003c FFF7FEFF 		bl	osStart
 466              	.LVL32:
 467              	.L36:
 468 0040 FEE7     		b	.L36
 469              	.L39:
 470 0042 00BF     		.align	2
 471              	.L38:
 472 0044 00080140 		.word	1073809408
 473 0048 00000000 		.word	taskA
 474 004c 00000000 		.word	taskB
 475              		.cfi_endproc
 476              	.LFE68:
 478              		.comm	huart1,64,4
 479              		.section	.rodata.MX_USART1_UART_Init.str1.4,"aMS",%progbits,1
 480              		.align	2
 481              	.LC0:
 482 0000 5372632F 		.ascii	"Src/main.c\000"
 482      6D61696E 
 482      2E6300
 483              		.text
 484              	.Letext0:
 485              		.file 2 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 486              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 487              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 488              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 489              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 490              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 491              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 492              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 493              		.file 10 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 494              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 495              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 496              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 497              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 498              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 499              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 500              		.file 17 "Inc/debug.h"
 501              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccaUBPKj.s 			page 15


 502              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 503              		.file 20 "Inc/os.h"
ARM GAS  /tmp/ccaUBPKj.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccaUBPKj.s:16     .text.taskA:0000000000000000 $t
     /tmp/ccaUBPKj.s:23     .text.taskA:0000000000000000 taskA
     /tmp/ccaUBPKj.s:58     .text.taskA:0000000000000020 $d
     /tmp/ccaUBPKj.s:63     .text.taskB:0000000000000000 $t
     /tmp/ccaUBPKj.s:70     .text.taskB:0000000000000000 taskB
     /tmp/ccaUBPKj.s:104    .text.taskB:0000000000000020 $d
     /tmp/ccaUBPKj.s:109    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccaUBPKj.s:115    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccaUBPKj.s:170    .text.MX_GPIO_Init:000000000000003c $d
     /tmp/ccaUBPKj.s:176    .text.__io_putchar:0000000000000000 $t
     /tmp/ccaUBPKj.s:183    .text.__io_putchar:0000000000000000 __io_putchar
     /tmp/ccaUBPKj.s:216    .text.__io_putchar:0000000000000020 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccaUBPKj.s:221    .text._Error_Handler:0000000000000000 $t
     /tmp/ccaUBPKj.s:228    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccaUBPKj.s:243    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccaUBPKj.s:249    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccaUBPKj.s:297    .text.MX_USART1_UART_Init:0000000000000030 $d
     /tmp/ccaUBPKj.s:304    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccaUBPKj.s:311    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccaUBPKj.s:400    .text.SystemClock_Config:000000000000006c $d
     /tmp/ccaUBPKj.s:406    .text.main:0000000000000000 $t
     /tmp/ccaUBPKj.s:413    .text.main:0000000000000000 main
     /tmp/ccaUBPKj.s:472    .text.main:0000000000000044 $d
     /tmp/ccaUBPKj.s:480    .rodata.MX_USART1_UART_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
os_setTaskDelay
HAL_GPIO_Init
HAL_UART_Transmit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
os_enterCritical
os_pre
os_createTask
osStart
