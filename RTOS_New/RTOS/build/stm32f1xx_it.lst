ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SVC_Handler_C,"ax",%progbits
  16              		.align	1
  17              		.global	SVC_Handler_C
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	SVC_Handler_C:
  24              	.LFB66:
  25              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /**
   2:Src/stm32f1xx_it.c ****   ******************************************************************************
   3:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   4:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f1xx_it.c ****   ******************************************************************************
   6:Src/stm32f1xx_it.c ****   *
   7:Src/stm32f1xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f1xx_it.c ****   *
   9:Src/stm32f1xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f1xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f1xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f1xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f1xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f1xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f1xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f1xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f1xx_it.c ****   *
  20:Src/stm32f1xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f1xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f1xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f1xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f1xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f1xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f1xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f1xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f1xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f1xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f1xx_it.c ****   *
  31:Src/stm32f1xx_it.c ****   ******************************************************************************
  32:Src/stm32f1xx_it.c ****   */
  33:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 2


  34:Src/stm32f1xx_it.c **** #include "stm32f1xx_hal.h"
  35:Src/stm32f1xx_it.c **** #include "stm32f1xx.h"
  36:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  37:Src/stm32f1xx_it.c **** #include "global.h"
  38:Src/stm32f1xx_it.c **** #include "os.h"
  39:Src/stm32f1xx_it.c **** #include "os_task.h"
  40:Src/stm32f1xx_it.c **** 
  41:Src/stm32f1xx_it.c **** #include <stdio.h>
  42:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  43:Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  44:Src/stm32f1xx_it.c **** 
  45:Src/stm32f1xx_it.c **** void SVC_Handler_C(unsigned int *svc_args)
  46:Src/stm32f1xx_it.c **** {
  26              		.loc 1 46 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  47:Src/stm32f1xx_it.c ****   unsigned int svc_number;
  48:Src/stm32f1xx_it.c ****   uint32_t stacked_r1, curSP;
  49:Src/stm32f1xx_it.c **** 
  50:Src/stm32f1xx_it.c ****   os_IntNestCount++;
  36              		.loc 1 50 0
  37 0002 1B4B     		ldr	r3, .L6
  38 0004 1A68     		ldr	r2, [r3]
  39 0006 0132     		adds	r2, r2, #1
  40 0008 1A60     		str	r2, [r3]
  51:Src/stm32f1xx_it.c ****   OS_Enter_Critical;
  41              		.loc 1 51 0
  42              		.syntax unified
  43              	@ 51 "Src/stm32f1xx_it.c" 1
  44 000a 72B6     		CPSID I
  45              	@ 0 "" 2
  52:Src/stm32f1xx_it.c **** 
  53:Src/stm32f1xx_it.c ****   svc_number = ((char *)svc_args[6])[-2];
  46              		.loc 1 53 0
  47              		.thumb
  48              		.syntax unified
  49 000c 8269     		ldr	r2, [r0, #24]
  50 000e 12F8022C 		ldrb	r2, [r2, #-2]	@ zero_extendqisi2
  51              	.LVL1:
  54:Src/stm32f1xx_it.c ****   stacked_r1 = svc_args[1];
  55:Src/stm32f1xx_it.c ****   //HAL_UART_Transmit(&huart1, "SVCHC\n", 6, 0xFF);
  56:Src/stm32f1xx_it.c ****   if (os_IntNestCount <= 1)
  52              		.loc 1 56 0
  53 0012 1B68     		ldr	r3, [r3]
  54 0014 012B     		cmp	r3, #1
  55 0016 05DD     		ble	.L5
  56              	.LVL2:
  57              	.L2:
  57:Src/stm32f1xx_it.c ****   {
  58:Src/stm32f1xx_it.c ****     switch (svc_number)
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 3


  59:Src/stm32f1xx_it.c ****     {
  60:Src/stm32f1xx_it.c ****     case 5:
  61:Src/stm32f1xx_it.c ****       //osTaskDelay
  62:Src/stm32f1xx_it.c ****       asm volatile(
  63:Src/stm32f1xx_it.c ****           "MRS    R0, PSP \n\t"
  64:Src/stm32f1xx_it.c ****           "MOV    R2, LR \n\t"
  65:Src/stm32f1xx_it.c ****           "MRS    R3, CONTROL \n\t"
  66:Src/stm32f1xx_it.c ****           "STMDB  R0!, {R2-R11} \n\t"
  67:Src/stm32f1xx_it.c ****           "MOV    %0, R0"
  68:Src/stm32f1xx_it.c ****           : "=r"(curSP));
  69:Src/stm32f1xx_it.c ****       tcb[currentTask].sp = curSP;
  70:Src/stm32f1xx_it.c ****       tcb[currentTask].state = TASK_SLEEPING;
  71:Src/stm32f1xx_it.c ****       tcb[currentTask].delay = lastTaskDelay;
  72:Src/stm32f1xx_it.c ****       printf("SVCC Task %d Delay %d State %d\n", currentTask, tcb[currentTask].delay, tcb[currentTa
  73:Src/stm32f1xx_it.c ****       nextTask = task_getNextReady();
  74:Src/stm32f1xx_it.c ****       //printf("SVCC nextTask: %d\n", nextTask);
  75:Src/stm32f1xx_it.c ****       SCB->ICSR |= SCB_ICSR_PENDSVSET_Msk;
  76:Src/stm32f1xx_it.c ****       needResched = 1;
  77:Src/stm32f1xx_it.c ****       break;
  78:Src/stm32f1xx_it.c ****     }
  79:Src/stm32f1xx_it.c ****   }
  80:Src/stm32f1xx_it.c ****   OS_Exit_Critical;
  58              		.loc 1 80 0
  59              		.syntax unified
  60              	@ 80 "Src/stm32f1xx_it.c" 1
  61 0018 62B6     		CPSIE I
  62              	@ 0 "" 2
  81:Src/stm32f1xx_it.c ****   os_IntNestCount--;
  63              		.loc 1 81 0
  64              		.thumb
  65              		.syntax unified
  66 001a 154A     		ldr	r2, .L6
  67 001c 1368     		ldr	r3, [r2]
  68 001e 013B     		subs	r3, r3, #1
  69 0020 1360     		str	r3, [r2]
  82:Src/stm32f1xx_it.c ****   return;
  83:Src/stm32f1xx_it.c **** }
  70              		.loc 1 83 0
  71 0022 10BD     		pop	{r4, pc}
  72              	.LVL3:
  73              	.L5:
  58:Src/stm32f1xx_it.c ****     {
  74              		.loc 1 58 0
  75 0024 052A     		cmp	r2, #5
  76 0026 F7D1     		bne	.L2
  62:Src/stm32f1xx_it.c ****           "MRS    R0, PSP \n\t"
  77              		.loc 1 62 0
  78              		.syntax unified
  79              	@ 62 "Src/stm32f1xx_it.c" 1
  80 0028 EFF30980 		MRS    R0, PSP 
  81 002c 7246     		MOV    R2, LR 
  82 002e EFF31483 		MRS    R3, CONTROL 
  83 0032 20E9FC0F 		STMDB  R0!, {R2-R11} 
  84 0036 0346     		MOV    r3, R0
  85              	@ 0 "" 2
  69:Src/stm32f1xx_it.c ****       tcb[currentTask].state = TASK_SLEEPING;
  86              		.loc 1 69 0
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 4


  87              		.thumb
  88              		.syntax unified
  89 0038 0E4A     		ldr	r2, .L6+4
  90              	.LVL4:
  91 003a 1168     		ldr	r1, [r2]
  92 003c 0E4C     		ldr	r4, .L6+8
  93 003e 0A01     		lsls	r2, r1, #4
  94 0040 A018     		adds	r0, r4, r2
  95              	.LVL5:
  96 0042 A350     		str	r3, [r4, r2]
  97              	.LVL6:
  70:Src/stm32f1xx_it.c ****       tcb[currentTask].delay = lastTaskDelay;
  98              		.loc 1 70 0
  99 0044 0323     		movs	r3, #3
 100 0046 0372     		strb	r3, [r0, #8]
  71:Src/stm32f1xx_it.c ****       printf("SVCC Task %d Delay %d State %d\n", currentTask, tcb[currentTask].delay, tcb[currentTa
 101              		.loc 1 71 0
 102 0048 0C4A     		ldr	r2, .L6+12
 103 004a 1268     		ldr	r2, [r2]
 104 004c C260     		str	r2, [r0, #12]
  72:Src/stm32f1xx_it.c ****       nextTask = task_getNextReady();
 105              		.loc 1 72 0
 106 004e 0C48     		ldr	r0, .L6+16
 107 0050 FFF7FEFF 		bl	printf
 108              	.LVL7:
  73:Src/stm32f1xx_it.c ****       //printf("SVCC nextTask: %d\n", nextTask);
 109              		.loc 1 73 0
 110 0054 FFF7FEFF 		bl	task_getNextReady
 111              	.LVL8:
 112 0058 0A4B     		ldr	r3, .L6+20
 113 005a 1860     		str	r0, [r3]
  75:Src/stm32f1xx_it.c ****       needResched = 1;
 114              		.loc 1 75 0
 115 005c 0A4A     		ldr	r2, .L6+24
 116 005e 5368     		ldr	r3, [r2, #4]
 117 0060 43F08053 		orr	r3, r3, #268435456
 118 0064 5360     		str	r3, [r2, #4]
  76:Src/stm32f1xx_it.c ****       break;
 119              		.loc 1 76 0
 120 0066 094B     		ldr	r3, .L6+28
 121 0068 0122     		movs	r2, #1
 122 006a 1A60     		str	r2, [r3]
  77:Src/stm32f1xx_it.c ****     }
 123              		.loc 1 77 0
 124 006c D4E7     		b	.L2
 125              	.L7:
 126 006e 00BF     		.align	2
 127              	.L6:
 128 0070 00000000 		.word	os_IntNestCount
 129 0074 00000000 		.word	currentTask
 130 0078 00000000 		.word	tcb
 131 007c 00000000 		.word	lastTaskDelay
 132 0080 00000000 		.word	.LC0
 133 0084 00000000 		.word	nextTask
 134 0088 00ED00E0 		.word	-536810240
 135 008c 00000000 		.word	needResched
 136              		.cfi_endproc
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 5


 137              	.LFE66:
 139              		.section	.text.NMI_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	NMI_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu softvfp
 147              	NMI_Handler:
 148              	.LFB67:
  84:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  85:Src/stm32f1xx_it.c **** 
  86:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  87:Src/stm32f1xx_it.c **** 
  88:Src/stm32f1xx_it.c **** /******************************************************************************/
  89:Src/stm32f1xx_it.c **** /*            Cortex-M3 Processor Interruption and Exception Handlers         */
  90:Src/stm32f1xx_it.c **** /******************************************************************************/
  91:Src/stm32f1xx_it.c **** 
  92:Src/stm32f1xx_it.c **** /**
  93:Src/stm32f1xx_it.c **** * @brief This function handles Non maskable interrupt.
  94:Src/stm32f1xx_it.c **** */
  95:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  96:Src/stm32f1xx_it.c **** {
 149              		.loc 1 96 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153 0000 08B5     		push	{r3, lr}
 154              	.LCFI1:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 3, -8
 157              		.cfi_offset 14, -4
  97:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  98:Src/stm32f1xx_it.c ****   HAL_UART_Transmit(&huart1, "NMI\n", 4, 0xFF);
 158              		.loc 1 98 0
 159 0002 FF23     		movs	r3, #255
 160 0004 0422     		movs	r2, #4
 161 0006 0249     		ldr	r1, .L10
 162 0008 0248     		ldr	r0, .L10+4
 163 000a FFF7FEFF 		bl	HAL_UART_Transmit
 164              	.LVL9:
  99:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
 100:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
 101:Src/stm32f1xx_it.c **** 
 102:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
 103:Src/stm32f1xx_it.c **** }
 165              		.loc 1 103 0
 166 000e 08BD     		pop	{r3, pc}
 167              	.L11:
 168              		.align	2
 169              	.L10:
 170 0010 00000000 		.word	.LC1
 171 0014 00000000 		.word	huart1
 172              		.cfi_endproc
 173              	.LFE67:
 175              		.section	.text.HardFault_Handler,"ax",%progbits
 176              		.align	1
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 6


 177              		.global	HardFault_Handler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu softvfp
 183              	HardFault_Handler:
 184              	.LFB68:
 104:Src/stm32f1xx_it.c **** 
 105:Src/stm32f1xx_it.c **** /**
 106:Src/stm32f1xx_it.c **** * @brief This function handles Hard fault interrupt.
 107:Src/stm32f1xx_it.c **** */
 108:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
 109:Src/stm32f1xx_it.c **** {
 185              		.loc 1 109 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 08B5     		push	{r3, lr}
 190              	.LCFI2:
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 3, -8
 193              		.cfi_offset 14, -4
 110:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 111:Src/stm32f1xx_it.c ****   uint32_t psp;
 112:Src/stm32f1xx_it.c ****   HAL_UART_Transmit(&huart1, "HardFT\n", 7, 0xFF);
 194              		.loc 1 112 0
 195 0002 FF23     		movs	r3, #255
 196 0004 0722     		movs	r2, #7
 197 0006 0549     		ldr	r1, .L15
 198 0008 0548     		ldr	r0, .L15+4
 199 000a FFF7FEFF 		bl	HAL_UART_Transmit
 200              	.LVL10:
 113:Src/stm32f1xx_it.c ****   asm volatile("MRS %0, PSP"
 201              		.loc 1 113 0
 202              		.syntax unified
 203              	@ 113 "Src/stm32f1xx_it.c" 1
 204 000e EFF30981 		MRS r1, PSP
 205              	@ 0 "" 2
 206              	.LVL11:
 114:Src/stm32f1xx_it.c ****                : "=r"(psp));
 115:Src/stm32f1xx_it.c ****   printf("PSP: %lx\n", psp);
 207              		.loc 1 115 0
 208              		.thumb
 209              		.syntax unified
 210 0012 0448     		ldr	r0, .L15+8
 211 0014 FFF7FEFF 		bl	printf
 212              	.LVL12:
 213              	.L13:
 214 0018 FEE7     		b	.L13
 215              	.L16:
 216 001a 00BF     		.align	2
 217              	.L15:
 218 001c 00000000 		.word	.LC2
 219 0020 00000000 		.word	huart1
 220 0024 08000000 		.word	.LC3
 221              		.cfi_endproc
 222              	.LFE68:
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 7


 224              		.section	.text.MemManage_Handler,"ax",%progbits
 225              		.align	1
 226              		.global	MemManage_Handler
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 230              		.fpu softvfp
 232              	MemManage_Handler:
 233              	.LFB69:
 116:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 117:Src/stm32f1xx_it.c ****   while (1)
 118:Src/stm32f1xx_it.c ****   {
 119:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 120:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 121:Src/stm32f1xx_it.c ****   }
 122:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
 123:Src/stm32f1xx_it.c **** 
 124:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
 125:Src/stm32f1xx_it.c **** }
 126:Src/stm32f1xx_it.c **** 
 127:Src/stm32f1xx_it.c **** /**
 128:Src/stm32f1xx_it.c **** * @brief This function handles Memory management fault.
 129:Src/stm32f1xx_it.c **** */
 130:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 131:Src/stm32f1xx_it.c **** {
 234              		.loc 1 131 0
 235              		.cfi_startproc
 236              		@ Volatile: function does not return.
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239 0000 08B5     		push	{r3, lr}
 240              	.LCFI3:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 3, -8
 243              		.cfi_offset 14, -4
 132:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 133:Src/stm32f1xx_it.c ****   HAL_UART_Transmit(&huart1, "MemM\n", 5, 0xFF);
 244              		.loc 1 133 0
 245 0002 FF23     		movs	r3, #255
 246 0004 0522     		movs	r2, #5
 247 0006 0249     		ldr	r1, .L20
 248 0008 0248     		ldr	r0, .L20+4
 249 000a FFF7FEFF 		bl	HAL_UART_Transmit
 250              	.LVL13:
 251              	.L18:
 252 000e FEE7     		b	.L18
 253              	.L21:
 254              		.align	2
 255              	.L20:
 256 0010 00000000 		.word	.LC4
 257 0014 00000000 		.word	huart1
 258              		.cfi_endproc
 259              	.LFE69:
 261              		.section	.text.BusFault_Handler,"ax",%progbits
 262              		.align	1
 263              		.global	BusFault_Handler
 264              		.syntax unified
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 8


 265              		.thumb
 266              		.thumb_func
 267              		.fpu softvfp
 269              	BusFault_Handler:
 270              	.LFB70:
 134:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 135:Src/stm32f1xx_it.c ****   while (1)
 136:Src/stm32f1xx_it.c ****   {
 137:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 138:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 139:Src/stm32f1xx_it.c ****   }
 140:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
 141:Src/stm32f1xx_it.c **** 
 142:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
 143:Src/stm32f1xx_it.c **** }
 144:Src/stm32f1xx_it.c **** 
 145:Src/stm32f1xx_it.c **** /**
 146:Src/stm32f1xx_it.c **** * @brief This function handles Prefetch fault, memory access fault.
 147:Src/stm32f1xx_it.c **** */
 148:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 149:Src/stm32f1xx_it.c **** {
 271              		.loc 1 149 0
 272              		.cfi_startproc
 273              		@ Volatile: function does not return.
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276 0000 08B5     		push	{r3, lr}
 277              	.LCFI4:
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 3, -8
 280              		.cfi_offset 14, -4
 150:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 151:Src/stm32f1xx_it.c ****   HAL_UART_Transmit(&huart1, "BusF\n", 5, 0xFF);
 281              		.loc 1 151 0
 282 0002 FF23     		movs	r3, #255
 283 0004 0522     		movs	r2, #5
 284 0006 0249     		ldr	r1, .L25
 285 0008 0248     		ldr	r0, .L25+4
 286 000a FFF7FEFF 		bl	HAL_UART_Transmit
 287              	.LVL14:
 288              	.L23:
 289 000e FEE7     		b	.L23
 290              	.L26:
 291              		.align	2
 292              	.L25:
 293 0010 00000000 		.word	.LC5
 294 0014 00000000 		.word	huart1
 295              		.cfi_endproc
 296              	.LFE70:
 298              		.section	.text.UsageFault_Handler,"ax",%progbits
 299              		.align	1
 300              		.global	UsageFault_Handler
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu softvfp
 306              	UsageFault_Handler:
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 9


 307              	.LFB71:
 152:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 153:Src/stm32f1xx_it.c ****   while (1)
 154:Src/stm32f1xx_it.c ****   {
 155:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 156:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 157:Src/stm32f1xx_it.c ****   }
 158:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 159:Src/stm32f1xx_it.c **** 
 160:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 161:Src/stm32f1xx_it.c **** }
 162:Src/stm32f1xx_it.c **** 
 163:Src/stm32f1xx_it.c **** /**
 164:Src/stm32f1xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 165:Src/stm32f1xx_it.c **** */
 166:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 167:Src/stm32f1xx_it.c **** {
 308              		.loc 1 167 0
 309              		.cfi_startproc
 310              		@ Volatile: function does not return.
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313 0000 08B5     		push	{r3, lr}
 314              	.LCFI5:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 3, -8
 317              		.cfi_offset 14, -4
 168:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 169:Src/stm32f1xx_it.c ****   HAL_UART_Transmit(&huart1, "UsgF\n", 5, 0xFF);
 318              		.loc 1 169 0
 319 0002 FF23     		movs	r3, #255
 320 0004 0522     		movs	r2, #5
 321 0006 0249     		ldr	r1, .L30
 322 0008 0248     		ldr	r0, .L30+4
 323 000a FFF7FEFF 		bl	HAL_UART_Transmit
 324              	.LVL15:
 325              	.L28:
 326 000e FEE7     		b	.L28
 327              	.L31:
 328              		.align	2
 329              	.L30:
 330 0010 00000000 		.word	.LC6
 331 0014 00000000 		.word	huart1
 332              		.cfi_endproc
 333              	.LFE71:
 335              		.section	.text.SVC_Handler,"ax",%progbits
 336              		.align	1
 337              		.global	SVC_Handler
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 341              		.fpu softvfp
 343              	SVC_Handler:
 344              	.LFB72:
 170:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 171:Src/stm32f1xx_it.c ****   while (1)
 172:Src/stm32f1xx_it.c ****   {
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 10


 173:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 174:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 175:Src/stm32f1xx_it.c ****   }
 176:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 177:Src/stm32f1xx_it.c **** 
 178:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 179:Src/stm32f1xx_it.c **** }
 180:Src/stm32f1xx_it.c **** 
 181:Src/stm32f1xx_it.c **** /**
 182:Src/stm32f1xx_it.c **** * @brief This function handles System service call via SWI instruction.
 183:Src/stm32f1xx_it.c **** */
 184:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 185:Src/stm32f1xx_it.c **** {
 345              		.loc 1 185 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 186:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 187:Src/stm32f1xx_it.c ****   asm volatile(
 350              		.loc 1 187 0
 351              		.syntax unified
 352              	@ 187 "Src/stm32f1xx_it.c" 1
 353 0000 1EF0040F 		TST     lr, #0x4            
 354 0004 0CBF     		ITE     eq                  
 355 0006 EFF30880 		MRSEQ   r0, msp             
 356 000a EFF30980 		MRSNE   r0, psp             
 357 000e FFF7FEBF 		B   SVC_Handler_C           
 358              		
 359              	@ 0 "" 2
 188:Src/stm32f1xx_it.c ****       "TST     lr, #0x4            \n\t"
 189:Src/stm32f1xx_it.c ****       "ITE     eq                  \n\t"
 190:Src/stm32f1xx_it.c ****       "MRSEQ   r0, msp             \n\t"
 191:Src/stm32f1xx_it.c ****       "MRSNE   r0, psp             \n\t"
 192:Src/stm32f1xx_it.c ****       "B   SVC_Handler_C           \n\t");
 193:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 194:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 195:Src/stm32f1xx_it.c **** 
 196:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 197:Src/stm32f1xx_it.c **** }
 360              		.loc 1 197 0
 361              		.thumb
 362              		.syntax unified
 363 0012 7047     		bx	lr
 364              		.cfi_endproc
 365              	.LFE72:
 367              		.section	.text.DebugMon_Handler,"ax",%progbits
 368              		.align	1
 369              		.global	DebugMon_Handler
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu softvfp
 375              	DebugMon_Handler:
 376              	.LFB73:
 198:Src/stm32f1xx_it.c **** 
 199:Src/stm32f1xx_it.c **** /**
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 11


 200:Src/stm32f1xx_it.c **** * @brief This function handles Debug monitor.
 201:Src/stm32f1xx_it.c **** */
 202:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 203:Src/stm32f1xx_it.c **** {
 377              		.loc 1 203 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 08B5     		push	{r3, lr}
 382              	.LCFI6:
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 3, -8
 385              		.cfi_offset 14, -4
 204:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 205:Src/stm32f1xx_it.c ****   HAL_UART_Transmit(&huart1, "DbgMon\n", 7, 0xFF);
 386              		.loc 1 205 0
 387 0002 FF23     		movs	r3, #255
 388 0004 0722     		movs	r2, #7
 389 0006 0249     		ldr	r1, .L35
 390 0008 0248     		ldr	r0, .L35+4
 391 000a FFF7FEFF 		bl	HAL_UART_Transmit
 392              	.LVL16:
 206:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 207:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 208:Src/stm32f1xx_it.c **** 
 209:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 210:Src/stm32f1xx_it.c **** }
 393              		.loc 1 210 0
 394 000e 08BD     		pop	{r3, pc}
 395              	.L36:
 396              		.align	2
 397              	.L35:
 398 0010 00000000 		.word	.LC7
 399 0014 00000000 		.word	huart1
 400              		.cfi_endproc
 401              	.LFE73:
 403              		.section	.text.PendSV_Handler,"ax",%progbits
 404              		.align	1
 405              		.global	PendSV_Handler
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu softvfp
 411              	PendSV_Handler:
 412              	.LFB74:
 211:Src/stm32f1xx_it.c **** 
 212:Src/stm32f1xx_it.c **** /**
 213:Src/stm32f1xx_it.c **** * @brief This function handles Pendable request for system service.
 214:Src/stm32f1xx_it.c **** */
 215:Src/stm32f1xx_it.c **** // Load Context and BX
 216:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 217:Src/stm32f1xx_it.c **** {
 413              		.loc 1 217 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 12


 418              	.LCFI7:
 419              		.cfi_def_cfa_offset 16
 420              		.cfi_offset 3, -16
 421              		.cfi_offset 4, -12
 422              		.cfi_offset 5, -8
 423              		.cfi_offset 14, -4
 218:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 219:Src/stm32f1xx_it.c ****   uint32_t *nextSP;
 220:Src/stm32f1xx_it.c ****   uint32_t *curSP;
 221:Src/stm32f1xx_it.c ****   os_IntNestCount++;
 424              		.loc 1 221 0
 425 0002 2C4A     		ldr	r2, .L45
 426 0004 1368     		ldr	r3, [r2]
 427 0006 0133     		adds	r3, r3, #1
 428 0008 1360     		str	r3, [r2]
 222:Src/stm32f1xx_it.c ****   OS_Enter_Critical;
 429              		.loc 1 222 0
 430              		.syntax unified
 431              	@ 222 "Src/stm32f1xx_it.c" 1
 432 000a 72B6     		CPSID I
 433              	@ 0 "" 2
 223:Src/stm32f1xx_it.c ****   //HAL_UART_Transmit(&huart1, "PendSV\n", 7, 0xFF);
 224:Src/stm32f1xx_it.c ****   if (needResched && (os_IntNestCount <= 1))
 434              		.loc 1 224 0
 435              		.thumb
 436              		.syntax unified
 437 000c 2A4B     		ldr	r3, .L45+4
 438 000e 1B68     		ldr	r3, [r3]
 439 0010 13B1     		cbz	r3, .L38
 440              		.loc 1 224 0 is_stmt 0 discriminator 1
 441 0012 1368     		ldr	r3, [r2]
 442 0014 012B     		cmp	r3, #1
 443 0016 05DD     		ble	.L43
 444              	.L38:
 225:Src/stm32f1xx_it.c ****   {
 226:Src/stm32f1xx_it.c ****     //HAL_UART_Transmit(&huart1, "PendSVSch\n", 10, 0xFF);
 227:Src/stm32f1xx_it.c ****     printf("PendSV Resched %d to %d\n", currentTask, nextTask);
 228:Src/stm32f1xx_it.c ****     if (os_started && (os_IntNestCount <= 1))
 229:Src/stm32f1xx_it.c ****     {
 230:Src/stm32f1xx_it.c ****       if (firstStarted)
 231:Src/stm32f1xx_it.c ****       {
 232:Src/stm32f1xx_it.c ****         asm volatile(
 233:Src/stm32f1xx_it.c ****             "MRS    R0, PSP \n\t"
 234:Src/stm32f1xx_it.c ****             "MOV    R2, LR \n\t"
 235:Src/stm32f1xx_it.c ****             "MRS    R3, CONTROL \n\t"
 236:Src/stm32f1xx_it.c ****             "STMDB  R0!, {R2-R11} \n\t"
 237:Src/stm32f1xx_it.c ****             //            "SUBS   R0, R0, #0x28 \n\t"
 238:Src/stm32f1xx_it.c ****             //            "STM    R0, {R2-R11} \n\t"
 239:Src/stm32f1xx_it.c ****             "MOV    %0, R0"
 240:Src/stm32f1xx_it.c ****             : "=r"(curSP));
 241:Src/stm32f1xx_it.c ****         tcb[currentTask].sp = curSP;
 242:Src/stm32f1xx_it.c ****         if (tcb[currentTask].state == TASK_RUNNING)
 243:Src/stm32f1xx_it.c ****           tcb[currentTask].state = TASK_READY;
 244:Src/stm32f1xx_it.c ****         //printf("currentTask: %d SP: %lx\n", currentTask, curSP);
 245:Src/stm32f1xx_it.c ****       }
 246:Src/stm32f1xx_it.c ****       else
 247:Src/stm32f1xx_it.c ****       {
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 13


 248:Src/stm32f1xx_it.c ****         firstStarted = 1;
 249:Src/stm32f1xx_it.c ****       }
 250:Src/stm32f1xx_it.c ****       nextSP = tcb[nextTask].sp;
 251:Src/stm32f1xx_it.c ****       tcb[nextTask].state = TASK_RUNNING;
 252:Src/stm32f1xx_it.c ****       //printf("nextTask: %d SP: %lx\n", nextTask, nextSP);
 253:Src/stm32f1xx_it.c ****       currentTask = nextTask;
 254:Src/stm32f1xx_it.c ****       os_IntNestCount--;
 255:Src/stm32f1xx_it.c ****       needResched = 0;
 256:Src/stm32f1xx_it.c ****       //HAL_UART_Transmit(&huart1, "PSVTSK\n", 7, 0xFF);
 257:Src/stm32f1xx_it.c ****       asm volatile(
 258:Src/stm32f1xx_it.c ****           "MOV    R1, %0  \n\t"
 259:Src/stm32f1xx_it.c ****           "LDMIA  R1!, {R2-R11} \n\t"
 260:Src/stm32f1xx_it.c ****           //          "LDM    R1, {R2-R11} \n\t"
 261:Src/stm32f1xx_it.c ****           //          "ADDS   R1, R1, #0x28 \n\t"
 262:Src/stm32f1xx_it.c ****           "MSR    PSP, R1 \n\t"
 263:Src/stm32f1xx_it.c ****           //          "MOV    LR, R2  \n\t"
 264:Src/stm32f1xx_it.c ****           "MOV    LR, #0xFFFFFFFD \n\t"
 265:Src/stm32f1xx_it.c ****           "MSR    CONTROL, R3 \n\t"
 266:Src/stm32f1xx_it.c ****           "ISB    \n\t"
 267:Src/stm32f1xx_it.c ****           "CPSIE  I \n\t"
 268:Src/stm32f1xx_it.c ****           "BX     LR"
 269:Src/stm32f1xx_it.c ****           :
 270:Src/stm32f1xx_it.c ****           : "r"(nextSP));
 271:Src/stm32f1xx_it.c ****     }
 272:Src/stm32f1xx_it.c ****     OS_Exit_Critical;
 273:Src/stm32f1xx_it.c ****   }
 274:Src/stm32f1xx_it.c ****   OS_Exit_Critical;
 445              		.loc 1 274 0 is_stmt 1
 446              		.syntax unified
 447              	@ 274 "Src/stm32f1xx_it.c" 1
 448 0018 62B6     		CPSIE I
 449              	@ 0 "" 2
 275:Src/stm32f1xx_it.c ****   os_IntNestCount--;
 450              		.loc 1 275 0
 451              		.thumb
 452              		.syntax unified
 453 001a 264A     		ldr	r2, .L45
 454 001c 1368     		ldr	r3, [r2]
 455 001e 013B     		subs	r3, r3, #1
 456 0020 1360     		str	r3, [r2]
 276:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 277:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 278:Src/stm32f1xx_it.c ****   //HAL_UART_Transmit(&huart1, "PSVERR\n", 7, 0xFF);
 279:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 280:Src/stm32f1xx_it.c **** }
 457              		.loc 1 280 0
 458 0022 38BD     		pop	{r3, r4, r5, pc}
 459              	.L43:
 227:Src/stm32f1xx_it.c ****     if (os_started && (os_IntNestCount <= 1))
 460              		.loc 1 227 0
 461 0024 254B     		ldr	r3, .L45+8
 462 0026 1A68     		ldr	r2, [r3]
 463 0028 254B     		ldr	r3, .L45+12
 464 002a 1968     		ldr	r1, [r3]
 465 002c 2548     		ldr	r0, .L45+16
 466 002e FFF7FEFF 		bl	printf
 467              	.LVL17:
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 14


 228:Src/stm32f1xx_it.c ****     {
 468              		.loc 1 228 0
 469 0032 254B     		ldr	r3, .L45+20
 470 0034 1B68     		ldr	r3, [r3]
 471 0036 1BB1     		cbz	r3, .L39
 228:Src/stm32f1xx_it.c ****     {
 472              		.loc 1 228 0 is_stmt 0 discriminator 1
 473 0038 1E4B     		ldr	r3, .L45
 474 003a 1B68     		ldr	r3, [r3]
 475 003c 012B     		cmp	r3, #1
 476 003e 01DD     		ble	.L44
 477              	.L39:
 272:Src/stm32f1xx_it.c ****   }
 478              		.loc 1 272 0 is_stmt 1
 479              		.syntax unified
 480              	@ 272 "Src/stm32f1xx_it.c" 1
 481 0040 62B6     		CPSIE I
 482              	@ 0 "" 2
 483              		.thumb
 484              		.syntax unified
 485 0042 E9E7     		b	.L38
 486              	.L44:
 230:Src/stm32f1xx_it.c ****       {
 487              		.loc 1 230 0
 488 0044 214A     		ldr	r2, .L45+24
 489 0046 1268     		ldr	r2, [r2]
 490 0048 9AB1     		cbz	r2, .L40
 232:Src/stm32f1xx_it.c ****             "MRS    R0, PSP \n\t"
 491              		.loc 1 232 0
 492              		.syntax unified
 493              	@ 232 "Src/stm32f1xx_it.c" 1
 494 004a EFF30980 		MRS    R0, PSP 
 495 004e 7246     		MOV    R2, LR 
 496 0050 EFF31483 		MRS    R3, CONTROL 
 497 0054 20E9FC0F 		STMDB  R0!, {R2-R11} 
 498 0058 0246     		MOV    r2, R0
 499              	@ 0 "" 2
 241:Src/stm32f1xx_it.c ****         if (tcb[currentTask].state == TASK_RUNNING)
 500              		.loc 1 241 0
 501              		.thumb
 502              		.syntax unified
 503 005a 1949     		ldr	r1, .L45+12
 504 005c 0C68     		ldr	r4, [r1]
 505 005e 1C48     		ldr	r0, .L45+28
 506 0060 2101     		lsls	r1, r4, #4
 507 0062 4518     		adds	r5, r0, r1
 508 0064 4250     		str	r2, [r0, r1]
 242:Src/stm32f1xx_it.c ****           tcb[currentTask].state = TASK_READY;
 509              		.loc 1 242 0
 510 0066 2A7A     		ldrb	r2, [r5, #8]	@ zero_extendqisi2
 511 0068 022A     		cmp	r2, #2
 512 006a 05D1     		bne	.L41
 243:Src/stm32f1xx_it.c ****         //printf("currentTask: %d SP: %lx\n", currentTask, curSP);
 513              		.loc 1 243 0
 514 006c 0122     		movs	r2, #1
 515 006e 2A72     		strb	r2, [r5, #8]
 516 0070 02E0     		b	.L41
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 15


 517              	.L40:
 248:Src/stm32f1xx_it.c ****       }
 518              		.loc 1 248 0
 519 0072 164A     		ldr	r2, .L45+24
 520 0074 0121     		movs	r1, #1
 521 0076 1160     		str	r1, [r2]
 522              	.L41:
 250:Src/stm32f1xx_it.c ****       tcb[nextTask].state = TASK_RUNNING;
 523              		.loc 1 250 0
 524 0078 104A     		ldr	r2, .L45+8
 525 007a 1268     		ldr	r2, [r2]
 526 007c 1448     		ldr	r0, .L45+28
 527 007e 1101     		lsls	r1, r2, #4
 528 0080 4418     		adds	r4, r0, r1
 529 0082 4158     		ldr	r1, [r0, r1]
 530              	.LVL18:
 251:Src/stm32f1xx_it.c ****       //printf("nextTask: %d SP: %lx\n", nextTask, nextSP);
 531              		.loc 1 251 0
 532 0084 0220     		movs	r0, #2
 533 0086 2072     		strb	r0, [r4, #8]
 253:Src/stm32f1xx_it.c ****       os_IntNestCount--;
 534              		.loc 1 253 0
 535 0088 0D48     		ldr	r0, .L45+12
 536 008a 0260     		str	r2, [r0]
 254:Src/stm32f1xx_it.c ****       needResched = 0;
 537              		.loc 1 254 0
 538 008c 013B     		subs	r3, r3, #1
 539 008e 094A     		ldr	r2, .L45
 540 0090 1360     		str	r3, [r2]
 255:Src/stm32f1xx_it.c ****       //HAL_UART_Transmit(&huart1, "PSVTSK\n", 7, 0xFF);
 541              		.loc 1 255 0
 542 0092 094B     		ldr	r3, .L45+4
 543 0094 0022     		movs	r2, #0
 544 0096 1A60     		str	r2, [r3]
 257:Src/stm32f1xx_it.c ****           "MOV    R1, %0  \n\t"
 545              		.loc 1 257 0
 546              		.syntax unified
 547              	@ 257 "Src/stm32f1xx_it.c" 1
 548 0098 0946     		MOV    R1, r1  
 549 009a B1E8FC0F 		LDMIA  R1!, {R2-R11} 
 550 009e 81F30988 		MSR    PSP, R1 
 551 00a2 6FF0020E 		MOV    LR, #0xFFFFFFFD 
 552 00a6 83F31488 		MSR    CONTROL, R3 
 553 00aa BFF36F8F 		ISB    
 554 00ae 62B6     		CPSIE  I 
 555 00b0 7047     		BX     LR
 556              	@ 0 "" 2
 557              		.thumb
 558              		.syntax unified
 559 00b2 C5E7     		b	.L39
 560              	.L46:
 561              		.align	2
 562              	.L45:
 563 00b4 00000000 		.word	os_IntNestCount
 564 00b8 00000000 		.word	needResched
 565 00bc 00000000 		.word	nextTask
 566 00c0 00000000 		.word	currentTask
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 16


 567 00c4 00000000 		.word	.LC8
 568 00c8 00000000 		.word	os_started
 569 00cc 00000000 		.word	firstStarted
 570 00d0 00000000 		.word	tcb
 571              		.cfi_endproc
 572              	.LFE74:
 574              		.section	.text.SysTick_Handler,"ax",%progbits
 575              		.align	1
 576              		.global	SysTick_Handler
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu softvfp
 582              	SysTick_Handler:
 583              	.LFB75:
 281:Src/stm32f1xx_it.c **** 
 282:Src/stm32f1xx_it.c **** /**
 283:Src/stm32f1xx_it.c **** * @brief This function handles System tick timer.
 284:Src/stm32f1xx_it.c **** */
 285:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 286:Src/stm32f1xx_it.c **** {
 584              		.loc 1 286 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588 0000 08B5     		push	{r3, lr}
 589              	.LCFI8:
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 3, -8
 592              		.cfi_offset 14, -4
 287:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 288:Src/stm32f1xx_it.c ****   uint32_t *curSP;
 289:Src/stm32f1xx_it.c ****   int i;
 290:Src/stm32f1xx_it.c ****   os_IntNestCount++;
 593              		.loc 1 290 0
 594 0002 1F4A     		ldr	r2, .L55
 595 0004 1368     		ldr	r3, [r2]
 596 0006 0133     		adds	r3, r3, #1
 597 0008 1360     		str	r3, [r2]
 291:Src/stm32f1xx_it.c ****   OS_Enter_Critical;
 598              		.loc 1 291 0
 599              		.syntax unified
 600              	@ 291 "Src/stm32f1xx_it.c" 1
 601 000a 72B6     		CPSID I
 602              	@ 0 "" 2
 292:Src/stm32f1xx_it.c ****   //HAL_UART_Transmit(&huart1, "Tick\n", 5, 0xFF);
 293:Src/stm32f1xx_it.c ****   if (os_started && (os_IntNestCount <= 1) && (needResched == 0))
 603              		.loc 1 293 0
 604              		.thumb
 605              		.syntax unified
 606 000c 1D4B     		ldr	r3, .L55+4
 607 000e 1B68     		ldr	r3, [r3]
 608 0010 13B1     		cbz	r3, .L48
 609              		.loc 1 293 0 is_stmt 0 discriminator 1
 610 0012 1368     		ldr	r3, [r2]
 611 0014 012B     		cmp	r3, #1
 612 0016 09DD     		ble	.L53
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 17


 613              	.L48:
 294:Src/stm32f1xx_it.c ****   {
 295:Src/stm32f1xx_it.c ****     //HAL_UART_Transmit(&huart1, "TickOS\n", 7, 0xFF);
 296:Src/stm32f1xx_it.c ****     for (i = 0; i < MAX_TASK_COUNT; i++)
 297:Src/stm32f1xx_it.c ****     {
 298:Src/stm32f1xx_it.c ****       if (tcb[i].state == TASK_SLEEPING)
 299:Src/stm32f1xx_it.c ****       {
 300:Src/stm32f1xx_it.c ****         tcb[i].delay--;
 301:Src/stm32f1xx_it.c ****         //printf("Task %d, Delay %d\n", i, tcb[i].delay);
 302:Src/stm32f1xx_it.c ****         if (tcb[i].delay == 0)
 303:Src/stm32f1xx_it.c ****           tcb[i].state = TASK_READY;
 304:Src/stm32f1xx_it.c ****       }
 305:Src/stm32f1xx_it.c ****     }
 306:Src/stm32f1xx_it.c ****     nextTask = task_getNextReady();
 307:Src/stm32f1xx_it.c ****     //printf("SYSTICK nextTask: %d\n", nextTask);
 308:Src/stm32f1xx_it.c ****     if (nextTask != currentTask)
 309:Src/stm32f1xx_it.c ****     {
 310:Src/stm32f1xx_it.c ****       SCB->ICSR |= SCB_ICSR_PENDSVSET_Msk;
 311:Src/stm32f1xx_it.c ****       needResched = 1;
 312:Src/stm32f1xx_it.c ****     }
 313:Src/stm32f1xx_it.c ****   }
 314:Src/stm32f1xx_it.c ****   OS_Exit_Critical;
 614              		.loc 1 314 0 is_stmt 1
 615              		.syntax unified
 616              	@ 314 "Src/stm32f1xx_it.c" 1
 617 0018 62B6     		CPSIE I
 618              	@ 0 "" 2
 315:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 316:Src/stm32f1xx_it.c ****   HAL_IncTick();
 619              		.loc 1 316 0
 620              		.thumb
 621              		.syntax unified
 622 001a FFF7FEFF 		bl	HAL_IncTick
 623              	.LVL19:
 317:Src/stm32f1xx_it.c ****   HAL_SYSTICK_IRQHandler();
 624              		.loc 1 317 0
 625 001e FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 626              	.LVL20:
 318:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 319:Src/stm32f1xx_it.c ****   os_IntNestCount--;
 627              		.loc 1 319 0
 628 0022 174A     		ldr	r2, .L55
 629 0024 1368     		ldr	r3, [r2]
 630 0026 013B     		subs	r3, r3, #1
 631 0028 1360     		str	r3, [r2]
 320:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 321:Src/stm32f1xx_it.c **** }
 632              		.loc 1 321 0
 633 002a 08BD     		pop	{r3, pc}
 634              	.L53:
 293:Src/stm32f1xx_it.c ****   {
 635              		.loc 1 293 0 discriminator 2
 636 002c 164B     		ldr	r3, .L55+8
 637 002e 1B68     		ldr	r3, [r3]
 638 0030 0BB1     		cbz	r3, .L49
 639 0032 F1E7     		b	.L48
 640              	.LVL21:
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 18


 641              	.L50:
 296:Src/stm32f1xx_it.c ****     {
 642              		.loc 1 296 0 discriminator 2
 643 0034 0133     		adds	r3, r3, #1
 644              	.LVL22:
 645              	.L49:
 296:Src/stm32f1xx_it.c ****     {
 646              		.loc 1 296 0 is_stmt 0 discriminator 1
 647 0036 032B     		cmp	r3, #3
 648 0038 11DC     		bgt	.L54
 298:Src/stm32f1xx_it.c ****       {
 649              		.loc 1 298 0 is_stmt 1
 650 003a 144A     		ldr	r2, .L55+12
 651 003c 02EB0312 		add	r2, r2, r3, lsl #4
 652 0040 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 653 0042 032A     		cmp	r2, #3
 654 0044 F6D1     		bne	.L50
 300:Src/stm32f1xx_it.c ****         //printf("Task %d, Delay %d\n", i, tcb[i].delay);
 655              		.loc 1 300 0
 656 0046 1149     		ldr	r1, .L55+12
 657 0048 01EB0311 		add	r1, r1, r3, lsl #4
 658 004c CA68     		ldr	r2, [r1, #12]
 659 004e 013A     		subs	r2, r2, #1
 660 0050 CA60     		str	r2, [r1, #12]
 302:Src/stm32f1xx_it.c ****           tcb[i].state = TASK_READY;
 661              		.loc 1 302 0
 662 0052 002A     		cmp	r2, #0
 663 0054 EED1     		bne	.L50
 303:Src/stm32f1xx_it.c ****       }
 664              		.loc 1 303 0
 665 0056 0A46     		mov	r2, r1
 666 0058 0121     		movs	r1, #1
 667 005a 1172     		strb	r1, [r2, #8]
 668 005c EAE7     		b	.L50
 669              	.L54:
 306:Src/stm32f1xx_it.c ****     //printf("SYSTICK nextTask: %d\n", nextTask);
 670              		.loc 1 306 0
 671 005e FFF7FEFF 		bl	task_getNextReady
 672              	.LVL23:
 673 0062 0B4B     		ldr	r3, .L55+16
 674 0064 1860     		str	r0, [r3]
 308:Src/stm32f1xx_it.c ****     {
 675              		.loc 1 308 0
 676 0066 0B4B     		ldr	r3, .L55+20
 677 0068 1B68     		ldr	r3, [r3]
 678 006a 9842     		cmp	r0, r3
 679 006c D4D0     		beq	.L48
 310:Src/stm32f1xx_it.c ****       needResched = 1;
 680              		.loc 1 310 0
 681 006e 0A4A     		ldr	r2, .L55+24
 682 0070 5368     		ldr	r3, [r2, #4]
 683 0072 43F08053 		orr	r3, r3, #268435456
 684 0076 5360     		str	r3, [r2, #4]
 311:Src/stm32f1xx_it.c ****     }
 685              		.loc 1 311 0
 686 0078 034B     		ldr	r3, .L55+8
 687 007a 0122     		movs	r2, #1
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 19


 688 007c 1A60     		str	r2, [r3]
 689 007e CBE7     		b	.L48
 690              	.L56:
 691              		.align	2
 692              	.L55:
 693 0080 00000000 		.word	os_IntNestCount
 694 0084 00000000 		.word	os_started
 695 0088 00000000 		.word	needResched
 696 008c 00000000 		.word	tcb
 697 0090 00000000 		.word	nextTask
 698 0094 00000000 		.word	currentTask
 699 0098 00ED00E0 		.word	-536810240
 700              		.cfi_endproc
 701              	.LFE75:
 703              		.section	.rodata.BusFault_Handler.str1.4,"aMS",%progbits,1
 704              		.align	2
 705              	.LC5:
 706 0000 42757346 		.ascii	"BusF\012\000"
 706      0A00
 707              		.section	.rodata.DebugMon_Handler.str1.4,"aMS",%progbits,1
 708              		.align	2
 709              	.LC7:
 710 0000 4462674D 		.ascii	"DbgMon\012\000"
 710      6F6E0A00 
 711              		.section	.rodata.HardFault_Handler.str1.4,"aMS",%progbits,1
 712              		.align	2
 713              	.LC2:
 714 0000 48617264 		.ascii	"HardFT\012\000"
 714      46540A00 
 715              	.LC3:
 716 0008 5053503A 		.ascii	"PSP: %lx\012\000"
 716      20256C78 
 716      0A00
 717              		.section	.rodata.MemManage_Handler.str1.4,"aMS",%progbits,1
 718              		.align	2
 719              	.LC4:
 720 0000 4D656D4D 		.ascii	"MemM\012\000"
 720      0A00
 721              		.section	.rodata.NMI_Handler.str1.4,"aMS",%progbits,1
 722              		.align	2
 723              	.LC1:
 724 0000 4E4D490A 		.ascii	"NMI\012\000"
 724      00
 725              		.section	.rodata.PendSV_Handler.str1.4,"aMS",%progbits,1
 726              		.align	2
 727              	.LC8:
 728 0000 50656E64 		.ascii	"PendSV Resched %d to %d\012\000"
 728      53562052 
 728      65736368 
 728      65642025 
 728      6420746F 
 729              		.section	.rodata.SVC_Handler_C.str1.4,"aMS",%progbits,1
 730              		.align	2
 731              	.LC0:
 732 0000 53564343 		.ascii	"SVCC Task %d Delay %d State %d\012\000"
 732      20546173 
 732      6B202564 
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 20


 732      2044656C 
 732      61792025 
 733              		.section	.rodata.UsageFault_Handler.str1.4,"aMS",%progbits,1
 734              		.align	2
 735              	.LC6:
 736 0000 55736746 		.ascii	"UsgF\012\000"
 736      0A00
 737              		.text
 738              	.Letext0:
 739              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 740              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 741              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 742              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 743              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 744              		.file 7 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 745              		.file 8 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 746              		.file 9 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 747              		.file 10 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 748              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 749              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 750              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 751              		.file 14 "Inc/os_task.h"
 752              		.file 15 "Inc/global.h"
 753              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 754              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 755              		.file 18 "d:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:16     .text.SVC_Handler_C:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:23     .text.SVC_Handler_C:00000000 SVC_Handler_C
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:128    .text.SVC_Handler_C:00000070 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:140    .text.NMI_Handler:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:147    .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:170    .text.NMI_Handler:00000010 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:176    .text.HardFault_Handler:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:183    .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:218    .text.HardFault_Handler:0000001c $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:225    .text.MemManage_Handler:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:232    .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:256    .text.MemManage_Handler:00000010 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:262    .text.BusFault_Handler:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:269    .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:293    .text.BusFault_Handler:00000010 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:299    .text.UsageFault_Handler:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:306    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:330    .text.UsageFault_Handler:00000010 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:336    .text.SVC_Handler:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:343    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:368    .text.DebugMon_Handler:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:375    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:398    .text.DebugMon_Handler:00000010 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:404    .text.PendSV_Handler:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:411    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:563    .text.PendSV_Handler:000000b4 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:575    .text.SysTick_Handler:00000000 $t
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:582    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:693    .text.SysTick_Handler:00000080 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:704    .rodata.BusFault_Handler.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:708    .rodata.DebugMon_Handler.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:712    .rodata.HardFault_Handler.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:718    .rodata.MemManage_Handler.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:722    .rodata.NMI_Handler.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:726    .rodata.PendSV_Handler.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:730    .rodata.SVC_Handler_C.str1.4:00000000 $d
C:\Users\Qian\AppData\Local\Temp\cc6WuGxh.s:734    .rodata.UsageFault_Handler.str1.4:00000000 $d

UNDEFINED SYMBOLS
printf
task_getNextReady
os_IntNestCount
currentTask
tcb
lastTaskDelay
nextTask
needResched
HAL_UART_Transmit
huart1
os_started
firstStarted
HAL_IncTick
HAL_SYSTICK_IRQHandler
